/*
 * generated by Xtext 2.33.0
 */
package xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class ThreatModelLanguageGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.Model");
		private final Assignment cElementsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cElementsStatementsParserRuleCall_0 = (RuleCall)cElementsAssignment.eContents().get(0);
		
		//Model:
		//    (elements+=Statements)*;
		@Override public ParserRule getRule() { return rule; }
		
		//(elements+=Statements)*
		public Assignment getElementsAssignment() { return cElementsAssignment; }
		
		//Statements
		public RuleCall getElementsStatementsParserRuleCall_0() { return cElementsStatementsParserRuleCall_0; }
	}
	public class StatementsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.Statements");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGroupingParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cOperationsParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Statements:
		//    (Grouping|Operations);
		@Override public ParserRule getRule() { return rule; }
		
		//(Grouping|Operations)
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Grouping
		public RuleCall getGroupingParserRuleCall_0() { return cGroupingParserRuleCall_0; }
		
		//Operations
		public RuleCall getOperationsParserRuleCall_1() { return cOperationsParserRuleCall_1; }
	}
	public class OperationsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.Operations");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAddParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRemoveParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cModifyParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Operations:
		//    (Add | Remove | Modify);
		@Override public ParserRule getRule() { return rule; }
		
		//(Add | Remove | Modify)
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Add
		public RuleCall getAddParserRuleCall_0() { return cAddParserRuleCall_0; }
		
		//Remove
		public RuleCall getRemoveParserRuleCall_1() { return cRemoveParserRuleCall_1; }
		
		//Modify
		public RuleCall getModifyParserRuleCall_2() { return cModifyParserRuleCall_2; }
	}
	public class AddElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.Add");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAddEntityParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAddFlowParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAddBoundaryParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		////Add
		//Add:
		//    AddEntity  | AddFlow | AddBoundary;
		@Override public ParserRule getRule() { return rule; }
		
		//AddEntity  | AddFlow | AddBoundary
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AddEntity
		public RuleCall getAddEntityParserRuleCall_0() { return cAddEntityParserRuleCall_0; }
		
		//AddFlow
		public RuleCall getAddFlowParserRuleCall_1() { return cAddFlowParserRuleCall_1; }
		
		//AddBoundary
		public RuleCall getAddBoundaryParserRuleCall_2() { return cAddBoundaryParserRuleCall_2; }
	}
	public class AddEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.AddEntity");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAddProcessParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAddExternalParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAddDatastoreParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//AddEntity:
		//    (AddProcess|AddExternal|AddDatastore);
		@Override public ParserRule getRule() { return rule; }
		
		//(AddProcess|AddExternal|AddDatastore)
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AddProcess
		public RuleCall getAddProcessParserRuleCall_0() { return cAddProcessParserRuleCall_0; }
		
		//AddExternal
		public RuleCall getAddExternalParserRuleCall_1() { return cAddExternalParserRuleCall_1; }
		
		//AddDatastore
		public RuleCall getAddDatastoreParserRuleCall_2() { return cAddDatastoreParserRuleCall_2; }
	}
	public class AddProcessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.AddProcess");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAddKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cProcessKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cIdAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cIdIDTerminalRuleCall_2_0 = (RuleCall)cIdAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDscKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDescriptionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cDescriptionAssignment_4_1.eContents().get(0);
		private final Assignment cDocumentationAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_5_0 = (RuleCall)cDocumentationAssignment_5.eContents().get(0);
		
		//AddProcess:
		//    'add' 'process' id=ID ('name' name=STRING)? ('dsc' description=STRING)? documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'add' 'process' id=ID ('name' name=STRING)? ('dsc' description=STRING)? documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'add'
		public Keyword getAddKeyword_0() { return cAddKeyword_0; }
		
		//'process'
		public Keyword getProcessKeyword_1() { return cProcessKeyword_1; }
		
		//id=ID
		public Assignment getIdAssignment_2() { return cIdAssignment_2; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_2_0() { return cIdIDTerminalRuleCall_2_0; }
		
		//('name' name=STRING)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'name'
		public Keyword getNameKeyword_3_0() { return cNameKeyword_3_0; }
		
		//name=STRING
		public Assignment getNameAssignment_3_1() { return cNameAssignment_3_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_3_1_0() { return cNameSTRINGTerminalRuleCall_3_1_0; }
		
		//('dsc' description=STRING)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'dsc'
		public Keyword getDscKeyword_4_0() { return cDscKeyword_4_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_4_1() { return cDescriptionAssignment_4_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_4_1_0() { return cDescriptionSTRINGTerminalRuleCall_4_1_0; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_5() { return cDocumentationAssignment_5; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_5_0() { return cDocumentationSTRINGTerminalRuleCall_5_0; }
	}
	public class AddExternalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.AddExternal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAddKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cExternalKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cEntityKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIdIDTerminalRuleCall_3_0 = (RuleCall)cIdAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNameKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNameAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cNameAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDscKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cDescriptionAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cDescriptionAssignment_5_1.eContents().get(0);
		private final Assignment cDocumentationAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_6_0 = (RuleCall)cDocumentationAssignment_6.eContents().get(0);
		
		//AddExternal:
		//    'add' 'external' 'entity' id=ID ('name' name=STRING)? ('dsc' description=STRING)? documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'add' 'external' 'entity' id=ID ('name' name=STRING)? ('dsc' description=STRING)? documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'add'
		public Keyword getAddKeyword_0() { return cAddKeyword_0; }
		
		//'external'
		public Keyword getExternalKeyword_1() { return cExternalKeyword_1; }
		
		//'entity'
		public Keyword getEntityKeyword_2() { return cEntityKeyword_2; }
		
		//id=ID
		public Assignment getIdAssignment_3() { return cIdAssignment_3; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_3_0() { return cIdIDTerminalRuleCall_3_0; }
		
		//('name' name=STRING)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'name'
		public Keyword getNameKeyword_4_0() { return cNameKeyword_4_0; }
		
		//name=STRING
		public Assignment getNameAssignment_4_1() { return cNameAssignment_4_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_4_1_0() { return cNameSTRINGTerminalRuleCall_4_1_0; }
		
		//('dsc' description=STRING)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'dsc'
		public Keyword getDscKeyword_5_0() { return cDscKeyword_5_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_5_1() { return cDescriptionAssignment_5_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_5_1_0() { return cDescriptionSTRINGTerminalRuleCall_5_1_0; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_6() { return cDocumentationAssignment_6; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_6_0() { return cDocumentationSTRINGTerminalRuleCall_6_0; }
	}
	public class AddDatastoreElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.AddDatastore");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAddKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cDatastoreKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cIdAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cIdIDTerminalRuleCall_2_0 = (RuleCall)cIdAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDscKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDescriptionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cDescriptionAssignment_4_1.eContents().get(0);
		private final Assignment cDocumentationAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_5_0 = (RuleCall)cDocumentationAssignment_5.eContents().get(0);
		
		//AddDatastore:
		//    'add' 'datastore' id=ID ('name' name=STRING)? ('dsc' description=STRING)? documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'add' 'datastore' id=ID ('name' name=STRING)? ('dsc' description=STRING)? documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'add'
		public Keyword getAddKeyword_0() { return cAddKeyword_0; }
		
		//'datastore'
		public Keyword getDatastoreKeyword_1() { return cDatastoreKeyword_1; }
		
		//id=ID
		public Assignment getIdAssignment_2() { return cIdAssignment_2; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_2_0() { return cIdIDTerminalRuleCall_2_0; }
		
		//('name' name=STRING)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'name'
		public Keyword getNameKeyword_3_0() { return cNameKeyword_3_0; }
		
		//name=STRING
		public Assignment getNameAssignment_3_1() { return cNameAssignment_3_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_3_1_0() { return cNameSTRINGTerminalRuleCall_3_1_0; }
		
		//('dsc' description=STRING)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'dsc'
		public Keyword getDscKeyword_4_0() { return cDscKeyword_4_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_4_1() { return cDescriptionAssignment_4_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_4_1_0() { return cDescriptionSTRINGTerminalRuleCall_4_1_0; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_5() { return cDocumentationAssignment_5; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_5_0() { return cDocumentationSTRINGTerminalRuleCall_5_0; }
	}
	public class AddFlowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.AddFlow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAddKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cFlowKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cIdAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cIdIDTerminalRuleCall_2_0 = (RuleCall)cIdAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDscKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDescriptionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cDescriptionAssignment_4_1.eContents().get(0);
		private final Assignment cSourceIdAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSourceIdIDTerminalRuleCall_5_0 = (RuleCall)cSourceIdAssignment_5.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cDestinationIdAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDestinationIdIDTerminalRuleCall_7_0 = (RuleCall)cDestinationIdAssignment_7.eContents().get(0);
		private final Assignment cDocumentationAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_8_0 = (RuleCall)cDocumentationAssignment_8.eContents().get(0);
		
		//AddFlow:
		//    'add' 'flow' id=ID ('name' name=STRING)? ('dsc' description=STRING)? sourceId=ID '->' destinationId=ID documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'add' 'flow' id=ID ('name' name=STRING)? ('dsc' description=STRING)? sourceId=ID '->' destinationId=ID documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'add'
		public Keyword getAddKeyword_0() { return cAddKeyword_0; }
		
		//'flow'
		public Keyword getFlowKeyword_1() { return cFlowKeyword_1; }
		
		//id=ID
		public Assignment getIdAssignment_2() { return cIdAssignment_2; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_2_0() { return cIdIDTerminalRuleCall_2_0; }
		
		//('name' name=STRING)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'name'
		public Keyword getNameKeyword_3_0() { return cNameKeyword_3_0; }
		
		//name=STRING
		public Assignment getNameAssignment_3_1() { return cNameAssignment_3_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_3_1_0() { return cNameSTRINGTerminalRuleCall_3_1_0; }
		
		//('dsc' description=STRING)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'dsc'
		public Keyword getDscKeyword_4_0() { return cDscKeyword_4_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_4_1() { return cDescriptionAssignment_4_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_4_1_0() { return cDescriptionSTRINGTerminalRuleCall_4_1_0; }
		
		//sourceId=ID
		public Assignment getSourceIdAssignment_5() { return cSourceIdAssignment_5; }
		
		//ID
		public RuleCall getSourceIdIDTerminalRuleCall_5_0() { return cSourceIdIDTerminalRuleCall_5_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_6() { return cHyphenMinusGreaterThanSignKeyword_6; }
		
		//destinationId=ID
		public Assignment getDestinationIdAssignment_7() { return cDestinationIdAssignment_7; }
		
		//ID
		public RuleCall getDestinationIdIDTerminalRuleCall_7_0() { return cDestinationIdIDTerminalRuleCall_7_0; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_8() { return cDocumentationAssignment_8; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_8_0() { return cDocumentationSTRINGTerminalRuleCall_8_0; }
	}
	public class AddBoundaryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.AddBoundary");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAddKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cBoundaryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cIdAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cIdIDTerminalRuleCall_2_0 = (RuleCall)cIdAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDscKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDescriptionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cDescriptionAssignment_4_1.eContents().get(0);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cEntitiesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cEntitiesIDTerminalRuleCall_6_0 = (RuleCall)cEntitiesAssignment_6.eContents().get(0);
		private final Assignment cDocumentationAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_7_0 = (RuleCall)cDocumentationAssignment_7.eContents().get(0);
		
		//AddBoundary:
		//    'add' 'boundary' id=ID ('name' name=STRING)? ('dsc' description=STRING)? ':' (entities+=ID*) documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'add' 'boundary' id=ID ('name' name=STRING)? ('dsc' description=STRING)? ':' (entities+=ID*) documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'add'
		public Keyword getAddKeyword_0() { return cAddKeyword_0; }
		
		//'boundary'
		public Keyword getBoundaryKeyword_1() { return cBoundaryKeyword_1; }
		
		//id=ID
		public Assignment getIdAssignment_2() { return cIdAssignment_2; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_2_0() { return cIdIDTerminalRuleCall_2_0; }
		
		//('name' name=STRING)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'name'
		public Keyword getNameKeyword_3_0() { return cNameKeyword_3_0; }
		
		//name=STRING
		public Assignment getNameAssignment_3_1() { return cNameAssignment_3_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_3_1_0() { return cNameSTRINGTerminalRuleCall_3_1_0; }
		
		//('dsc' description=STRING)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'dsc'
		public Keyword getDscKeyword_4_0() { return cDscKeyword_4_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_4_1() { return cDescriptionAssignment_4_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_4_1_0() { return cDescriptionSTRINGTerminalRuleCall_4_1_0; }
		
		//':'
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }
		
		//(entities+=ID*)
		public Assignment getEntitiesAssignment_6() { return cEntitiesAssignment_6; }
		
		//ID
		public RuleCall getEntitiesIDTerminalRuleCall_6_0() { return cEntitiesIDTerminalRuleCall_6_0; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_7() { return cDocumentationAssignment_7; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_7_0() { return cDocumentationSTRINGTerminalRuleCall_7_0; }
	}
	public class RemoveElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.Remove");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRemoveKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Assignment cDocumentationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_2_0 = (RuleCall)cDocumentationAssignment_2.eContents().get(0);
		
		//Remove:
		//    'remove' id=ID documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'remove' id=ID documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'remove'
		public Keyword getRemoveKeyword_0() { return cRemoveKeyword_0; }
		
		//id=ID
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_2() { return cDocumentationAssignment_2; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_2_0() { return cDocumentationSTRINGTerminalRuleCall_2_0; }
	}
	public class ModifyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.Modify");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRenameParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cReIDParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cChangeDescriptionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cFlowSourceParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cFlowDestinationParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cBoundaryAddEntityParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cBoundaryRemoveEntityParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cRotateFlowParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cMergeEntityParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cSplitEntityParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		
		//Modify:
		//    (Rename | ReID | ChangeDescription | FlowSource| FlowDestination | BoundaryAddEntity| BoundaryRemoveEntity | RotateFlow | MergeEntity | SplitEntity);
		@Override public ParserRule getRule() { return rule; }
		
		//(Rename | ReID | ChangeDescription | FlowSource| FlowDestination | BoundaryAddEntity| BoundaryRemoveEntity | RotateFlow | MergeEntity | SplitEntity)
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Rename
		public RuleCall getRenameParserRuleCall_0() { return cRenameParserRuleCall_0; }
		
		//ReID
		public RuleCall getReIDParserRuleCall_1() { return cReIDParserRuleCall_1; }
		
		//ChangeDescription
		public RuleCall getChangeDescriptionParserRuleCall_2() { return cChangeDescriptionParserRuleCall_2; }
		
		//FlowSource
		public RuleCall getFlowSourceParserRuleCall_3() { return cFlowSourceParserRuleCall_3; }
		
		//FlowDestination
		public RuleCall getFlowDestinationParserRuleCall_4() { return cFlowDestinationParserRuleCall_4; }
		
		//BoundaryAddEntity
		public RuleCall getBoundaryAddEntityParserRuleCall_5() { return cBoundaryAddEntityParserRuleCall_5; }
		
		//BoundaryRemoveEntity
		public RuleCall getBoundaryRemoveEntityParserRuleCall_6() { return cBoundaryRemoveEntityParserRuleCall_6; }
		
		//RotateFlow
		public RuleCall getRotateFlowParserRuleCall_7() { return cRotateFlowParserRuleCall_7; }
		
		//MergeEntity
		public RuleCall getMergeEntityParserRuleCall_8() { return cMergeEntityParserRuleCall_8; }
		
		//SplitEntity
		public RuleCall getSplitEntityParserRuleCall_9() { return cSplitEntityParserRuleCall_9; }
	}
	public class RenameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.Rename");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRenameKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Keyword cIntoKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNewNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNewNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cNewNameAssignment_3.eContents().get(0);
		private final Assignment cDocumentationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_4_0 = (RuleCall)cDocumentationAssignment_4.eContents().get(0);
		
		//Rename:
		//    'rename' id=ID 'into' newName=STRING documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'rename' id=ID 'into' newName=STRING documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'rename'
		public Keyword getRenameKeyword_0() { return cRenameKeyword_0; }
		
		//id=ID
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }
		
		//'into'
		public Keyword getIntoKeyword_2() { return cIntoKeyword_2; }
		
		//newName=STRING
		public Assignment getNewNameAssignment_3() { return cNewNameAssignment_3; }
		
		//STRING
		public RuleCall getNewNameSTRINGTerminalRuleCall_3_0() { return cNewNameSTRINGTerminalRuleCall_3_0; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_4() { return cDocumentationAssignment_4; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_4_0() { return cDocumentationSTRINGTerminalRuleCall_4_0; }
	}
	public class ReIDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.ReID");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChangeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Keyword cIdKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNewIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNewIdIDTerminalRuleCall_3_0 = (RuleCall)cNewIdAssignment_3.eContents().get(0);
		private final Assignment cDocumentationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_4_0 = (RuleCall)cDocumentationAssignment_4.eContents().get(0);
		
		//ReID:
		//    'change' id=ID 'id' newId=ID documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'change' id=ID 'id' newId=ID documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'change'
		public Keyword getChangeKeyword_0() { return cChangeKeyword_0; }
		
		//id=ID
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }
		
		//'id'
		public Keyword getIdKeyword_2() { return cIdKeyword_2; }
		
		//newId=ID
		public Assignment getNewIdAssignment_3() { return cNewIdAssignment_3; }
		
		//ID
		public RuleCall getNewIdIDTerminalRuleCall_3_0() { return cNewIdIDTerminalRuleCall_3_0; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_4() { return cDocumentationAssignment_4; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_4_0() { return cDocumentationSTRINGTerminalRuleCall_4_0; }
	}
	public class ChangeDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.ChangeDescription");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChangeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Keyword cDescriptionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDescriptionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_3_0 = (RuleCall)cDescriptionAssignment_3.eContents().get(0);
		private final Assignment cDocumentationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_4_0 = (RuleCall)cDocumentationAssignment_4.eContents().get(0);
		
		// //all description
		//ChangeDescription:
		//    'change' id=ID 'description' description=STRING documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'change' id=ID 'description' description=STRING documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'change'
		public Keyword getChangeKeyword_0() { return cChangeKeyword_0; }
		
		//id=ID
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }
		
		//'description'
		public Keyword getDescriptionKeyword_2() { return cDescriptionKeyword_2; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_3() { return cDescriptionAssignment_3; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_3_0() { return cDescriptionSTRINGTerminalRuleCall_3_0; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_4() { return cDocumentationAssignment_4; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_4_0() { return cDocumentationSTRINGTerminalRuleCall_4_0; }
	}
	public class FlowSourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.FlowSource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChangeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Keyword cSourceKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSourceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSourceIDTerminalRuleCall_3_0 = (RuleCall)cSourceAssignment_3.eContents().get(0);
		private final Assignment cDocumentationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_4_0 = (RuleCall)cDocumentationAssignment_4.eContents().get(0);
		
		//FlowSource:
		//    'change' id=ID 'source' source=ID documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'change' id=ID 'source' source=ID documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'change'
		public Keyword getChangeKeyword_0() { return cChangeKeyword_0; }
		
		//id=ID
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }
		
		//'source'
		public Keyword getSourceKeyword_2() { return cSourceKeyword_2; }
		
		//source=ID
		public Assignment getSourceAssignment_3() { return cSourceAssignment_3; }
		
		//ID
		public RuleCall getSourceIDTerminalRuleCall_3_0() { return cSourceIDTerminalRuleCall_3_0; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_4() { return cDocumentationAssignment_4; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_4_0() { return cDocumentationSTRINGTerminalRuleCall_4_0; }
	}
	public class FlowDestinationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.FlowDestination");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChangeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Keyword cDestinationKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDestinationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDestinationIDTerminalRuleCall_3_0 = (RuleCall)cDestinationAssignment_3.eContents().get(0);
		private final Assignment cDocumentationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_4_0 = (RuleCall)cDocumentationAssignment_4.eContents().get(0);
		
		//FlowDestination:
		//    'change' id=ID 'destination' destination=ID documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'change' id=ID 'destination' destination=ID documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'change'
		public Keyword getChangeKeyword_0() { return cChangeKeyword_0; }
		
		//id=ID
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }
		
		//'destination'
		public Keyword getDestinationKeyword_2() { return cDestinationKeyword_2; }
		
		//destination=ID
		public Assignment getDestinationAssignment_3() { return cDestinationAssignment_3; }
		
		//ID
		public RuleCall getDestinationIDTerminalRuleCall_3_0() { return cDestinationIDTerminalRuleCall_3_0; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_4() { return cDocumentationAssignment_4; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_4_0() { return cDocumentationSTRINGTerminalRuleCall_4_0; }
	}
	public class BoundaryAddEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.BoundaryAddEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChangeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Keyword cAddKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNewEntityAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNewEntityIDTerminalRuleCall_3_0 = (RuleCall)cNewEntityAssignment_3.eContents().get(0);
		private final Assignment cDocumentationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_4_0 = (RuleCall)cDocumentationAssignment_4.eContents().get(0);
		
		//BoundaryAddEntity:
		//    'change' id=ID 'add' newEntity=ID documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'change' id=ID 'add' newEntity=ID documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'change'
		public Keyword getChangeKeyword_0() { return cChangeKeyword_0; }
		
		//id=ID
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }
		
		//'add'
		public Keyword getAddKeyword_2() { return cAddKeyword_2; }
		
		//newEntity=ID
		public Assignment getNewEntityAssignment_3() { return cNewEntityAssignment_3; }
		
		//ID
		public RuleCall getNewEntityIDTerminalRuleCall_3_0() { return cNewEntityIDTerminalRuleCall_3_0; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_4() { return cDocumentationAssignment_4; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_4_0() { return cDocumentationSTRINGTerminalRuleCall_4_0; }
	}
	public class BoundaryRemoveEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.BoundaryRemoveEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChangeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Keyword cRemoveKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOldEntityAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOldEntityIDTerminalRuleCall_3_0 = (RuleCall)cOldEntityAssignment_3.eContents().get(0);
		private final Assignment cDocumentationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_4_0 = (RuleCall)cDocumentationAssignment_4.eContents().get(0);
		
		//BoundaryRemoveEntity:
		//    'change' id=ID 'remove' oldEntity=ID documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'change' id=ID 'remove' oldEntity=ID documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'change'
		public Keyword getChangeKeyword_0() { return cChangeKeyword_0; }
		
		//id=ID
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }
		
		//'remove'
		public Keyword getRemoveKeyword_2() { return cRemoveKeyword_2; }
		
		//oldEntity=ID
		public Assignment getOldEntityAssignment_3() { return cOldEntityAssignment_3; }
		
		//ID
		public RuleCall getOldEntityIDTerminalRuleCall_3_0() { return cOldEntityIDTerminalRuleCall_3_0; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_4() { return cDocumentationAssignment_4; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_4_0() { return cDocumentationSTRINGTerminalRuleCall_4_0; }
	}
	public class RotateFlowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.RotateFlow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChangeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Keyword cRevertKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cFlowKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDocumentationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_4_0 = (RuleCall)cDocumentationAssignment_4.eContents().get(0);
		
		//RotateFlow:
		//    'change' id=ID 'revert' 'flow' documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'change' id=ID 'revert' 'flow' documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'change'
		public Keyword getChangeKeyword_0() { return cChangeKeyword_0; }
		
		//id=ID
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }
		
		//'revert'
		public Keyword getRevertKeyword_2() { return cRevertKeyword_2; }
		
		//'flow'
		public Keyword getFlowKeyword_3() { return cFlowKeyword_3; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_4() { return cDocumentationAssignment_4; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_4_0() { return cDocumentationSTRINGTerminalRuleCall_4_0; }
	}
	public class MergeEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.MergeEntity");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMergeIntoProcessParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMergeIntoExternalParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMergeIntoDatastoreParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//MergeEntity:
		//    (MergeIntoProcess|MergeIntoExternal|MergeIntoDatastore);
		@Override public ParserRule getRule() { return rule; }
		
		//(MergeIntoProcess|MergeIntoExternal|MergeIntoDatastore)
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MergeIntoProcess
		public RuleCall getMergeIntoProcessParserRuleCall_0() { return cMergeIntoProcessParserRuleCall_0; }
		
		//MergeIntoExternal
		public RuleCall getMergeIntoExternalParserRuleCall_1() { return cMergeIntoExternalParserRuleCall_1; }
		
		//MergeIntoDatastore
		public RuleCall getMergeIntoDatastoreParserRuleCall_2() { return cMergeIntoDatastoreParserRuleCall_2; }
	}
	public class MergeIntoProcessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.MergeIntoProcess");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMergeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEntity1Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEntity1IDTerminalRuleCall_1_0 = (RuleCall)cEntity1Assignment_1.eContents().get(0);
		private final Keyword cAndKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntity2Assignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEntity2IDTerminalRuleCall_3_0 = (RuleCall)cEntity2Assignment_3.eContents().get(0);
		private final Keyword cIntoKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cProcessKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cIdAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cIdIDTerminalRuleCall_6_0 = (RuleCall)cIdAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cNameKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cNameAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_7_1_0 = (RuleCall)cNameAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cDscKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cDescriptionAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_8_1_0 = (RuleCall)cDescriptionAssignment_8_1.eContents().get(0);
		private final Assignment cDocumentationAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_9_0 = (RuleCall)cDocumentationAssignment_9.eContents().get(0);
		
		//MergeIntoProcess:
		//    'merge' entity1=ID 'and' entity2=ID 'into' 'process' id=ID ('name' name=STRING)? ('dsc' description=STRING)? documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'merge' entity1=ID 'and' entity2=ID 'into' 'process' id=ID ('name' name=STRING)? ('dsc' description=STRING)? documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'merge'
		public Keyword getMergeKeyword_0() { return cMergeKeyword_0; }
		
		//entity1=ID
		public Assignment getEntity1Assignment_1() { return cEntity1Assignment_1; }
		
		//ID
		public RuleCall getEntity1IDTerminalRuleCall_1_0() { return cEntity1IDTerminalRuleCall_1_0; }
		
		//'and'
		public Keyword getAndKeyword_2() { return cAndKeyword_2; }
		
		//entity2=ID
		public Assignment getEntity2Assignment_3() { return cEntity2Assignment_3; }
		
		//ID
		public RuleCall getEntity2IDTerminalRuleCall_3_0() { return cEntity2IDTerminalRuleCall_3_0; }
		
		//'into'
		public Keyword getIntoKeyword_4() { return cIntoKeyword_4; }
		
		//'process'
		public Keyword getProcessKeyword_5() { return cProcessKeyword_5; }
		
		//id=ID
		public Assignment getIdAssignment_6() { return cIdAssignment_6; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_6_0() { return cIdIDTerminalRuleCall_6_0; }
		
		//('name' name=STRING)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'name'
		public Keyword getNameKeyword_7_0() { return cNameKeyword_7_0; }
		
		//name=STRING
		public Assignment getNameAssignment_7_1() { return cNameAssignment_7_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_7_1_0() { return cNameSTRINGTerminalRuleCall_7_1_0; }
		
		//('dsc' description=STRING)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'dsc'
		public Keyword getDscKeyword_8_0() { return cDscKeyword_8_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_8_1() { return cDescriptionAssignment_8_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_8_1_0() { return cDescriptionSTRINGTerminalRuleCall_8_1_0; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_9() { return cDocumentationAssignment_9; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_9_0() { return cDocumentationSTRINGTerminalRuleCall_9_0; }
	}
	public class MergeIntoExternalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.MergeIntoExternal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMergeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEntity1Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEntity1IDTerminalRuleCall_1_0 = (RuleCall)cEntity1Assignment_1.eContents().get(0);
		private final Keyword cAndKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntity2Assignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEntity2IDTerminalRuleCall_3_0 = (RuleCall)cEntity2Assignment_3.eContents().get(0);
		private final Keyword cIntoKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cExternalKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cEntityKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cIdAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cIdIDTerminalRuleCall_7_0 = (RuleCall)cIdAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cNameKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cNameAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_8_1_0 = (RuleCall)cNameAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cDscKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cDescriptionAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_9_1_0 = (RuleCall)cDescriptionAssignment_9_1.eContents().get(0);
		private final Assignment cDocumentationAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_10_0 = (RuleCall)cDocumentationAssignment_10.eContents().get(0);
		
		//MergeIntoExternal:
		//    'merge' entity1=ID 'and' entity2=ID 'into' 'external' 'entity' id=ID ('name' name=STRING)? ('dsc' description=STRING)? documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'merge' entity1=ID 'and' entity2=ID 'into' 'external' 'entity' id=ID ('name' name=STRING)? ('dsc' description=STRING)? documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'merge'
		public Keyword getMergeKeyword_0() { return cMergeKeyword_0; }
		
		//entity1=ID
		public Assignment getEntity1Assignment_1() { return cEntity1Assignment_1; }
		
		//ID
		public RuleCall getEntity1IDTerminalRuleCall_1_0() { return cEntity1IDTerminalRuleCall_1_0; }
		
		//'and'
		public Keyword getAndKeyword_2() { return cAndKeyword_2; }
		
		//entity2=ID
		public Assignment getEntity2Assignment_3() { return cEntity2Assignment_3; }
		
		//ID
		public RuleCall getEntity2IDTerminalRuleCall_3_0() { return cEntity2IDTerminalRuleCall_3_0; }
		
		//'into'
		public Keyword getIntoKeyword_4() { return cIntoKeyword_4; }
		
		//'external'
		public Keyword getExternalKeyword_5() { return cExternalKeyword_5; }
		
		//'entity'
		public Keyword getEntityKeyword_6() { return cEntityKeyword_6; }
		
		//id=ID
		public Assignment getIdAssignment_7() { return cIdAssignment_7; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_7_0() { return cIdIDTerminalRuleCall_7_0; }
		
		//('name' name=STRING)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'name'
		public Keyword getNameKeyword_8_0() { return cNameKeyword_8_0; }
		
		//name=STRING
		public Assignment getNameAssignment_8_1() { return cNameAssignment_8_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_8_1_0() { return cNameSTRINGTerminalRuleCall_8_1_0; }
		
		//('dsc' description=STRING)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'dsc'
		public Keyword getDscKeyword_9_0() { return cDscKeyword_9_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_9_1() { return cDescriptionAssignment_9_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_9_1_0() { return cDescriptionSTRINGTerminalRuleCall_9_1_0; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_10() { return cDocumentationAssignment_10; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_10_0() { return cDocumentationSTRINGTerminalRuleCall_10_0; }
	}
	public class MergeIntoDatastoreElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.MergeIntoDatastore");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMergeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEntity1Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEntity1IDTerminalRuleCall_1_0 = (RuleCall)cEntity1Assignment_1.eContents().get(0);
		private final Keyword cAndKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntity2Assignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEntity2IDTerminalRuleCall_3_0 = (RuleCall)cEntity2Assignment_3.eContents().get(0);
		private final Keyword cIntoKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cDatastoreKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cIdAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cIdIDTerminalRuleCall_6_0 = (RuleCall)cIdAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cNameKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cNameAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_7_1_0 = (RuleCall)cNameAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cDscKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cDescriptionAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_8_1_0 = (RuleCall)cDescriptionAssignment_8_1.eContents().get(0);
		private final Assignment cDocumentationAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_9_0 = (RuleCall)cDocumentationAssignment_9.eContents().get(0);
		
		//MergeIntoDatastore:
		//    'merge' entity1=ID 'and' entity2=ID 'into' 'datastore' id=ID ('name' name=STRING)? ('dsc' description=STRING)? documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'merge' entity1=ID 'and' entity2=ID 'into' 'datastore' id=ID ('name' name=STRING)? ('dsc' description=STRING)? documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'merge'
		public Keyword getMergeKeyword_0() { return cMergeKeyword_0; }
		
		//entity1=ID
		public Assignment getEntity1Assignment_1() { return cEntity1Assignment_1; }
		
		//ID
		public RuleCall getEntity1IDTerminalRuleCall_1_0() { return cEntity1IDTerminalRuleCall_1_0; }
		
		//'and'
		public Keyword getAndKeyword_2() { return cAndKeyword_2; }
		
		//entity2=ID
		public Assignment getEntity2Assignment_3() { return cEntity2Assignment_3; }
		
		//ID
		public RuleCall getEntity2IDTerminalRuleCall_3_0() { return cEntity2IDTerminalRuleCall_3_0; }
		
		//'into'
		public Keyword getIntoKeyword_4() { return cIntoKeyword_4; }
		
		//'datastore'
		public Keyword getDatastoreKeyword_5() { return cDatastoreKeyword_5; }
		
		//id=ID
		public Assignment getIdAssignment_6() { return cIdAssignment_6; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_6_0() { return cIdIDTerminalRuleCall_6_0; }
		
		//('name' name=STRING)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'name'
		public Keyword getNameKeyword_7_0() { return cNameKeyword_7_0; }
		
		//name=STRING
		public Assignment getNameAssignment_7_1() { return cNameAssignment_7_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_7_1_0() { return cNameSTRINGTerminalRuleCall_7_1_0; }
		
		//('dsc' description=STRING)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'dsc'
		public Keyword getDscKeyword_8_0() { return cDscKeyword_8_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_8_1() { return cDescriptionAssignment_8_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_8_1_0() { return cDescriptionSTRINGTerminalRuleCall_8_1_0; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_9() { return cDocumentationAssignment_9; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_9_0() { return cDocumentationSTRINGTerminalRuleCall_9_0; }
	}
	public class SplitEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.SplitEntity");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSplitProcessAndProcessParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSplitsProcessAndDatastoreParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSplitsDatastoreAndProcessParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cSplitProcessAndExternalParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cSplitExternalAndProcessParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cSplitDatastoreAndExternalParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cSplitExternalAndDatastoreParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cSplitDatastoreAndDatastoreParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cSplitExternalAndExternalParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		
		//SplitEntity:
		//    (SplitProcessAndProcess|SplitsProcessAndDatastore|SplitsDatastoreAndProcess|SplitProcessAndExternal|SplitExternalAndProcess|SplitDatastoreAndExternal|SplitExternalAndDatastore|SplitDatastoreAndDatastore|SplitExternalAndExternal);
		@Override public ParserRule getRule() { return rule; }
		
		//(SplitProcessAndProcess|SplitsProcessAndDatastore|SplitsDatastoreAndProcess|SplitProcessAndExternal|SplitExternalAndProcess|SplitDatastoreAndExternal|SplitExternalAndDatastore|SplitDatastoreAndDatastore|SplitExternalAndExternal)
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SplitProcessAndProcess
		public RuleCall getSplitProcessAndProcessParserRuleCall_0() { return cSplitProcessAndProcessParserRuleCall_0; }
		
		//SplitsProcessAndDatastore
		public RuleCall getSplitsProcessAndDatastoreParserRuleCall_1() { return cSplitsProcessAndDatastoreParserRuleCall_1; }
		
		//SplitsDatastoreAndProcess
		public RuleCall getSplitsDatastoreAndProcessParserRuleCall_2() { return cSplitsDatastoreAndProcessParserRuleCall_2; }
		
		//SplitProcessAndExternal
		public RuleCall getSplitProcessAndExternalParserRuleCall_3() { return cSplitProcessAndExternalParserRuleCall_3; }
		
		//SplitExternalAndProcess
		public RuleCall getSplitExternalAndProcessParserRuleCall_4() { return cSplitExternalAndProcessParserRuleCall_4; }
		
		//SplitDatastoreAndExternal
		public RuleCall getSplitDatastoreAndExternalParserRuleCall_5() { return cSplitDatastoreAndExternalParserRuleCall_5; }
		
		//SplitExternalAndDatastore
		public RuleCall getSplitExternalAndDatastoreParserRuleCall_6() { return cSplitExternalAndDatastoreParserRuleCall_6; }
		
		//SplitDatastoreAndDatastore
		public RuleCall getSplitDatastoreAndDatastoreParserRuleCall_7() { return cSplitDatastoreAndDatastoreParserRuleCall_7; }
		
		//SplitExternalAndExternal
		public RuleCall getSplitExternalAndExternalParserRuleCall_8() { return cSplitExternalAndExternalParserRuleCall_8; }
	}
	public class FlowFixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.FlowFix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cFlowIdAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cFlowIdIDTerminalRuleCall_0_0 = (RuleCall)cFlowIdAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEntityIdAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEntityIdIDTerminalRuleCall_2_0 = (RuleCall)cEntityIdAssignment_2.eContents().get(0);
		
		//FlowFix:
		//    flowId=ID '->' entityId=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//flowId=ID '->' entityId=ID
		public Group getGroup() { return cGroup; }
		
		//flowId=ID
		public Assignment getFlowIdAssignment_0() { return cFlowIdAssignment_0; }
		
		//ID
		public RuleCall getFlowIdIDTerminalRuleCall_0_0() { return cFlowIdIDTerminalRuleCall_0_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }
		
		//entityId=ID
		public Assignment getEntityIdAssignment_2() { return cEntityIdAssignment_2; }
		
		//ID
		public RuleCall getEntityIdIDTerminalRuleCall_2_0() { return cEntityIdIDTerminalRuleCall_2_0; }
	}
	public class SplitProcessAndProcessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.SplitProcessAndProcess");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSplitKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Keyword cIntoKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cProcessKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cEntity1Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cEntity1IDTerminalRuleCall_4_0 = (RuleCall)cEntity1Assignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNameKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cEntity1NameAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cEntity1NameSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cEntity1NameAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDscKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cEntity1DescriptionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cEntity1DescriptionSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cEntity1DescriptionAssignment_6_1.eContents().get(0);
		private final Keyword cAndKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cProcessKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cEntity2Assignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cEntity2IDTerminalRuleCall_9_0 = (RuleCall)cEntity2Assignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cNameKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cEntity2NameAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cEntity2NameSTRINGTerminalRuleCall_10_1_0 = (RuleCall)cEntity2NameAssignment_10_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cDscKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cEntity2DescriptionAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cEntity2DescriptionSTRINGTerminalRuleCall_11_1_0 = (RuleCall)cEntity2DescriptionAssignment_11_1.eContents().get(0);
		private final Keyword cFlowsKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cLeftCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cFlowFixAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cFlowFixFlowFixParserRuleCall_14_0 = (RuleCall)cFlowFixAssignment_14.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cDocumentationAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_16_0 = (RuleCall)cDocumentationAssignment_16.eContents().get(0);
		
		//SplitProcessAndProcess:
		//    'split' id=ID 'into' 'process' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'process' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
		//        (flowFix+=FlowFix)*
		//    '}' documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'split' id=ID 'into' 'process' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'process' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
		//    (flowFix+=FlowFix)*
		//'}' documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'split'
		public Keyword getSplitKeyword_0() { return cSplitKeyword_0; }
		
		//id=ID
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }
		
		//'into'
		public Keyword getIntoKeyword_2() { return cIntoKeyword_2; }
		
		//'process'
		public Keyword getProcessKeyword_3() { return cProcessKeyword_3; }
		
		//entity1=ID
		public Assignment getEntity1Assignment_4() { return cEntity1Assignment_4; }
		
		//ID
		public RuleCall getEntity1IDTerminalRuleCall_4_0() { return cEntity1IDTerminalRuleCall_4_0; }
		
		//('name' entity1Name=STRING)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'name'
		public Keyword getNameKeyword_5_0() { return cNameKeyword_5_0; }
		
		//entity1Name=STRING
		public Assignment getEntity1NameAssignment_5_1() { return cEntity1NameAssignment_5_1; }
		
		//STRING
		public RuleCall getEntity1NameSTRINGTerminalRuleCall_5_1_0() { return cEntity1NameSTRINGTerminalRuleCall_5_1_0; }
		
		//('dsc' entity1Description=STRING)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'dsc'
		public Keyword getDscKeyword_6_0() { return cDscKeyword_6_0; }
		
		//entity1Description=STRING
		public Assignment getEntity1DescriptionAssignment_6_1() { return cEntity1DescriptionAssignment_6_1; }
		
		//STRING
		public RuleCall getEntity1DescriptionSTRINGTerminalRuleCall_6_1_0() { return cEntity1DescriptionSTRINGTerminalRuleCall_6_1_0; }
		
		//'and'
		public Keyword getAndKeyword_7() { return cAndKeyword_7; }
		
		//'process'
		public Keyword getProcessKeyword_8() { return cProcessKeyword_8; }
		
		//entity2=ID
		public Assignment getEntity2Assignment_9() { return cEntity2Assignment_9; }
		
		//ID
		public RuleCall getEntity2IDTerminalRuleCall_9_0() { return cEntity2IDTerminalRuleCall_9_0; }
		
		//('name' entity2Name=STRING)?
		public Group getGroup_10() { return cGroup_10; }
		
		//'name'
		public Keyword getNameKeyword_10_0() { return cNameKeyword_10_0; }
		
		//entity2Name=STRING
		public Assignment getEntity2NameAssignment_10_1() { return cEntity2NameAssignment_10_1; }
		
		//STRING
		public RuleCall getEntity2NameSTRINGTerminalRuleCall_10_1_0() { return cEntity2NameSTRINGTerminalRuleCall_10_1_0; }
		
		//('dsc' entity2Description=STRING)?
		public Group getGroup_11() { return cGroup_11; }
		
		//'dsc'
		public Keyword getDscKeyword_11_0() { return cDscKeyword_11_0; }
		
		//entity2Description=STRING
		public Assignment getEntity2DescriptionAssignment_11_1() { return cEntity2DescriptionAssignment_11_1; }
		
		//STRING
		public RuleCall getEntity2DescriptionSTRINGTerminalRuleCall_11_1_0() { return cEntity2DescriptionSTRINGTerminalRuleCall_11_1_0; }
		
		//'flows'
		public Keyword getFlowsKeyword_12() { return cFlowsKeyword_12; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_13() { return cLeftCurlyBracketKeyword_13; }
		
		//(flowFix+=FlowFix)*
		public Assignment getFlowFixAssignment_14() { return cFlowFixAssignment_14; }
		
		//FlowFix
		public RuleCall getFlowFixFlowFixParserRuleCall_14_0() { return cFlowFixFlowFixParserRuleCall_14_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_15() { return cRightCurlyBracketKeyword_15; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_16() { return cDocumentationAssignment_16; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_16_0() { return cDocumentationSTRINGTerminalRuleCall_16_0; }
	}
	public class SplitsProcessAndDatastoreElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.SplitsProcessAndDatastore");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSplitKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Keyword cIntoKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cProcessKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cEntity1Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cEntity1IDTerminalRuleCall_4_0 = (RuleCall)cEntity1Assignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNameKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cEntity1NameAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cEntity1NameSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cEntity1NameAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDscKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cEntity1DescriptionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cEntity1DescriptionSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cEntity1DescriptionAssignment_6_1.eContents().get(0);
		private final Keyword cAndKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cDatastoreKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cEntity2Assignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cEntity2IDTerminalRuleCall_9_0 = (RuleCall)cEntity2Assignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cNameKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cEntity2NameAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cEntity2NameSTRINGTerminalRuleCall_10_1_0 = (RuleCall)cEntity2NameAssignment_10_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cDscKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cEntity2DescriptionAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cEntity2DescriptionSTRINGTerminalRuleCall_11_1_0 = (RuleCall)cEntity2DescriptionAssignment_11_1.eContents().get(0);
		private final Keyword cFlowsKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cLeftCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cFlowFixAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cFlowFixFlowFixParserRuleCall_14_0 = (RuleCall)cFlowFixAssignment_14.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cDocumentationAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_16_0 = (RuleCall)cDocumentationAssignment_16.eContents().get(0);
		
		//SplitsProcessAndDatastore:
		//    'split' id=ID 'into' 'process' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'datastore' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
		//        (flowFix+=FlowFix)*
		//    '}' documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'split' id=ID 'into' 'process' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'datastore' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
		//    (flowFix+=FlowFix)*
		//'}' documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'split'
		public Keyword getSplitKeyword_0() { return cSplitKeyword_0; }
		
		//id=ID
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }
		
		//'into'
		public Keyword getIntoKeyword_2() { return cIntoKeyword_2; }
		
		//'process'
		public Keyword getProcessKeyword_3() { return cProcessKeyword_3; }
		
		//entity1=ID
		public Assignment getEntity1Assignment_4() { return cEntity1Assignment_4; }
		
		//ID
		public RuleCall getEntity1IDTerminalRuleCall_4_0() { return cEntity1IDTerminalRuleCall_4_0; }
		
		//('name' entity1Name=STRING)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'name'
		public Keyword getNameKeyword_5_0() { return cNameKeyword_5_0; }
		
		//entity1Name=STRING
		public Assignment getEntity1NameAssignment_5_1() { return cEntity1NameAssignment_5_1; }
		
		//STRING
		public RuleCall getEntity1NameSTRINGTerminalRuleCall_5_1_0() { return cEntity1NameSTRINGTerminalRuleCall_5_1_0; }
		
		//('dsc' entity1Description=STRING)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'dsc'
		public Keyword getDscKeyword_6_0() { return cDscKeyword_6_0; }
		
		//entity1Description=STRING
		public Assignment getEntity1DescriptionAssignment_6_1() { return cEntity1DescriptionAssignment_6_1; }
		
		//STRING
		public RuleCall getEntity1DescriptionSTRINGTerminalRuleCall_6_1_0() { return cEntity1DescriptionSTRINGTerminalRuleCall_6_1_0; }
		
		//'and'
		public Keyword getAndKeyword_7() { return cAndKeyword_7; }
		
		//'datastore'
		public Keyword getDatastoreKeyword_8() { return cDatastoreKeyword_8; }
		
		//entity2=ID
		public Assignment getEntity2Assignment_9() { return cEntity2Assignment_9; }
		
		//ID
		public RuleCall getEntity2IDTerminalRuleCall_9_0() { return cEntity2IDTerminalRuleCall_9_0; }
		
		//('name' entity2Name=STRING)?
		public Group getGroup_10() { return cGroup_10; }
		
		//'name'
		public Keyword getNameKeyword_10_0() { return cNameKeyword_10_0; }
		
		//entity2Name=STRING
		public Assignment getEntity2NameAssignment_10_1() { return cEntity2NameAssignment_10_1; }
		
		//STRING
		public RuleCall getEntity2NameSTRINGTerminalRuleCall_10_1_0() { return cEntity2NameSTRINGTerminalRuleCall_10_1_0; }
		
		//('dsc' entity2Description=STRING)?
		public Group getGroup_11() { return cGroup_11; }
		
		//'dsc'
		public Keyword getDscKeyword_11_0() { return cDscKeyword_11_0; }
		
		//entity2Description=STRING
		public Assignment getEntity2DescriptionAssignment_11_1() { return cEntity2DescriptionAssignment_11_1; }
		
		//STRING
		public RuleCall getEntity2DescriptionSTRINGTerminalRuleCall_11_1_0() { return cEntity2DescriptionSTRINGTerminalRuleCall_11_1_0; }
		
		//'flows'
		public Keyword getFlowsKeyword_12() { return cFlowsKeyword_12; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_13() { return cLeftCurlyBracketKeyword_13; }
		
		//(flowFix+=FlowFix)*
		public Assignment getFlowFixAssignment_14() { return cFlowFixAssignment_14; }
		
		//FlowFix
		public RuleCall getFlowFixFlowFixParserRuleCall_14_0() { return cFlowFixFlowFixParserRuleCall_14_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_15() { return cRightCurlyBracketKeyword_15; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_16() { return cDocumentationAssignment_16; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_16_0() { return cDocumentationSTRINGTerminalRuleCall_16_0; }
	}
	public class SplitsDatastoreAndProcessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.SplitsDatastoreAndProcess");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSplitKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Keyword cIntoKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cDatastoreKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cEntity1Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cEntity1IDTerminalRuleCall_4_0 = (RuleCall)cEntity1Assignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNameKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cEntity1NameAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cEntity1NameSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cEntity1NameAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDscKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cEntity1DescriptionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cEntity1DescriptionSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cEntity1DescriptionAssignment_6_1.eContents().get(0);
		private final Keyword cAndKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cProcessKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cEntity2Assignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cEntity2IDTerminalRuleCall_9_0 = (RuleCall)cEntity2Assignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cNameKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cEntity2NameAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cEntity2NameSTRINGTerminalRuleCall_10_1_0 = (RuleCall)cEntity2NameAssignment_10_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cDscKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cEntity2DescriptionAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cEntity2DescriptionSTRINGTerminalRuleCall_11_1_0 = (RuleCall)cEntity2DescriptionAssignment_11_1.eContents().get(0);
		private final Keyword cFlowsKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cLeftCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cFlowFixAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cFlowFixFlowFixParserRuleCall_14_0 = (RuleCall)cFlowFixAssignment_14.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cDocumentationAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_16_0 = (RuleCall)cDocumentationAssignment_16.eContents().get(0);
		
		//SplitsDatastoreAndProcess:
		//    'split' id=ID 'into' 'datastore' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'process' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
		//        (flowFix+=FlowFix)*
		//    '}' documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'split' id=ID 'into' 'datastore' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'process' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
		//    (flowFix+=FlowFix)*
		//'}' documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'split'
		public Keyword getSplitKeyword_0() { return cSplitKeyword_0; }
		
		//id=ID
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }
		
		//'into'
		public Keyword getIntoKeyword_2() { return cIntoKeyword_2; }
		
		//'datastore'
		public Keyword getDatastoreKeyword_3() { return cDatastoreKeyword_3; }
		
		//entity1=ID
		public Assignment getEntity1Assignment_4() { return cEntity1Assignment_4; }
		
		//ID
		public RuleCall getEntity1IDTerminalRuleCall_4_0() { return cEntity1IDTerminalRuleCall_4_0; }
		
		//('name' entity1Name=STRING)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'name'
		public Keyword getNameKeyword_5_0() { return cNameKeyword_5_0; }
		
		//entity1Name=STRING
		public Assignment getEntity1NameAssignment_5_1() { return cEntity1NameAssignment_5_1; }
		
		//STRING
		public RuleCall getEntity1NameSTRINGTerminalRuleCall_5_1_0() { return cEntity1NameSTRINGTerminalRuleCall_5_1_0; }
		
		//('dsc' entity1Description=STRING)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'dsc'
		public Keyword getDscKeyword_6_0() { return cDscKeyword_6_0; }
		
		//entity1Description=STRING
		public Assignment getEntity1DescriptionAssignment_6_1() { return cEntity1DescriptionAssignment_6_1; }
		
		//STRING
		public RuleCall getEntity1DescriptionSTRINGTerminalRuleCall_6_1_0() { return cEntity1DescriptionSTRINGTerminalRuleCall_6_1_0; }
		
		//'and'
		public Keyword getAndKeyword_7() { return cAndKeyword_7; }
		
		//'process'
		public Keyword getProcessKeyword_8() { return cProcessKeyword_8; }
		
		//entity2=ID
		public Assignment getEntity2Assignment_9() { return cEntity2Assignment_9; }
		
		//ID
		public RuleCall getEntity2IDTerminalRuleCall_9_0() { return cEntity2IDTerminalRuleCall_9_0; }
		
		//('name' entity2Name=STRING)?
		public Group getGroup_10() { return cGroup_10; }
		
		//'name'
		public Keyword getNameKeyword_10_0() { return cNameKeyword_10_0; }
		
		//entity2Name=STRING
		public Assignment getEntity2NameAssignment_10_1() { return cEntity2NameAssignment_10_1; }
		
		//STRING
		public RuleCall getEntity2NameSTRINGTerminalRuleCall_10_1_0() { return cEntity2NameSTRINGTerminalRuleCall_10_1_0; }
		
		//('dsc' entity2Description=STRING)?
		public Group getGroup_11() { return cGroup_11; }
		
		//'dsc'
		public Keyword getDscKeyword_11_0() { return cDscKeyword_11_0; }
		
		//entity2Description=STRING
		public Assignment getEntity2DescriptionAssignment_11_1() { return cEntity2DescriptionAssignment_11_1; }
		
		//STRING
		public RuleCall getEntity2DescriptionSTRINGTerminalRuleCall_11_1_0() { return cEntity2DescriptionSTRINGTerminalRuleCall_11_1_0; }
		
		//'flows'
		public Keyword getFlowsKeyword_12() { return cFlowsKeyword_12; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_13() { return cLeftCurlyBracketKeyword_13; }
		
		//(flowFix+=FlowFix)*
		public Assignment getFlowFixAssignment_14() { return cFlowFixAssignment_14; }
		
		//FlowFix
		public RuleCall getFlowFixFlowFixParserRuleCall_14_0() { return cFlowFixFlowFixParserRuleCall_14_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_15() { return cRightCurlyBracketKeyword_15; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_16() { return cDocumentationAssignment_16; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_16_0() { return cDocumentationSTRINGTerminalRuleCall_16_0; }
	}
	public class SplitProcessAndExternalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.SplitProcessAndExternal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSplitKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Keyword cIntoKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cProcessKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cEntity1Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cEntity1IDTerminalRuleCall_4_0 = (RuleCall)cEntity1Assignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNameKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cEntity1NameAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cEntity1NameSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cEntity1NameAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDscKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cEntity1DescriptionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cEntity1DescriptionSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cEntity1DescriptionAssignment_6_1.eContents().get(0);
		private final Keyword cAndKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cExternalKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cEntityKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cEntity2Assignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cEntity2IDTerminalRuleCall_10_0 = (RuleCall)cEntity2Assignment_10.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cNameKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cEntity2NameAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cEntity2NameSTRINGTerminalRuleCall_11_1_0 = (RuleCall)cEntity2NameAssignment_11_1.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cDscKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cEntity2DescriptionAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cEntity2DescriptionSTRINGTerminalRuleCall_12_1_0 = (RuleCall)cEntity2DescriptionAssignment_12_1.eContents().get(0);
		private final Keyword cFlowsKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cLeftCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Assignment cFlowFixAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cFlowFixFlowFixParserRuleCall_15_0 = (RuleCall)cFlowFixAssignment_15.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cDocumentationAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_17_0 = (RuleCall)cDocumentationAssignment_17.eContents().get(0);
		
		//SplitProcessAndExternal:
		//    'split' id=ID 'into' 'process' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'external' 'entity' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
		//        (flowFix+=FlowFix)*
		//    '}' documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'split' id=ID 'into' 'process' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'external' 'entity' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
		//    (flowFix+=FlowFix)*
		//'}' documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'split'
		public Keyword getSplitKeyword_0() { return cSplitKeyword_0; }
		
		//id=ID
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }
		
		//'into'
		public Keyword getIntoKeyword_2() { return cIntoKeyword_2; }
		
		//'process'
		public Keyword getProcessKeyword_3() { return cProcessKeyword_3; }
		
		//entity1=ID
		public Assignment getEntity1Assignment_4() { return cEntity1Assignment_4; }
		
		//ID
		public RuleCall getEntity1IDTerminalRuleCall_4_0() { return cEntity1IDTerminalRuleCall_4_0; }
		
		//('name' entity1Name=STRING)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'name'
		public Keyword getNameKeyword_5_0() { return cNameKeyword_5_0; }
		
		//entity1Name=STRING
		public Assignment getEntity1NameAssignment_5_1() { return cEntity1NameAssignment_5_1; }
		
		//STRING
		public RuleCall getEntity1NameSTRINGTerminalRuleCall_5_1_0() { return cEntity1NameSTRINGTerminalRuleCall_5_1_0; }
		
		//('dsc' entity1Description=STRING)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'dsc'
		public Keyword getDscKeyword_6_0() { return cDscKeyword_6_0; }
		
		//entity1Description=STRING
		public Assignment getEntity1DescriptionAssignment_6_1() { return cEntity1DescriptionAssignment_6_1; }
		
		//STRING
		public RuleCall getEntity1DescriptionSTRINGTerminalRuleCall_6_1_0() { return cEntity1DescriptionSTRINGTerminalRuleCall_6_1_0; }
		
		//'and'
		public Keyword getAndKeyword_7() { return cAndKeyword_7; }
		
		//'external'
		public Keyword getExternalKeyword_8() { return cExternalKeyword_8; }
		
		//'entity'
		public Keyword getEntityKeyword_9() { return cEntityKeyword_9; }
		
		//entity2=ID
		public Assignment getEntity2Assignment_10() { return cEntity2Assignment_10; }
		
		//ID
		public RuleCall getEntity2IDTerminalRuleCall_10_0() { return cEntity2IDTerminalRuleCall_10_0; }
		
		//('name' entity2Name=STRING)?
		public Group getGroup_11() { return cGroup_11; }
		
		//'name'
		public Keyword getNameKeyword_11_0() { return cNameKeyword_11_0; }
		
		//entity2Name=STRING
		public Assignment getEntity2NameAssignment_11_1() { return cEntity2NameAssignment_11_1; }
		
		//STRING
		public RuleCall getEntity2NameSTRINGTerminalRuleCall_11_1_0() { return cEntity2NameSTRINGTerminalRuleCall_11_1_0; }
		
		//('dsc' entity2Description=STRING)?
		public Group getGroup_12() { return cGroup_12; }
		
		//'dsc'
		public Keyword getDscKeyword_12_0() { return cDscKeyword_12_0; }
		
		//entity2Description=STRING
		public Assignment getEntity2DescriptionAssignment_12_1() { return cEntity2DescriptionAssignment_12_1; }
		
		//STRING
		public RuleCall getEntity2DescriptionSTRINGTerminalRuleCall_12_1_0() { return cEntity2DescriptionSTRINGTerminalRuleCall_12_1_0; }
		
		//'flows'
		public Keyword getFlowsKeyword_13() { return cFlowsKeyword_13; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_14() { return cLeftCurlyBracketKeyword_14; }
		
		//(flowFix+=FlowFix)*
		public Assignment getFlowFixAssignment_15() { return cFlowFixAssignment_15; }
		
		//FlowFix
		public RuleCall getFlowFixFlowFixParserRuleCall_15_0() { return cFlowFixFlowFixParserRuleCall_15_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_16() { return cRightCurlyBracketKeyword_16; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_17() { return cDocumentationAssignment_17; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_17_0() { return cDocumentationSTRINGTerminalRuleCall_17_0; }
	}
	public class SplitExternalAndProcessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.SplitExternalAndProcess");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSplitKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Keyword cIntoKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cExternalKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEntityKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cEntity1Assignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEntity1IDTerminalRuleCall_5_0 = (RuleCall)cEntity1Assignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cNameKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cEntity1NameAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cEntity1NameSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cEntity1NameAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cDscKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cEntity1DescriptionAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cEntity1DescriptionSTRINGTerminalRuleCall_7_1_0 = (RuleCall)cEntity1DescriptionAssignment_7_1.eContents().get(0);
		private final Keyword cAndKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cProcessKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cEntity2Assignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cEntity2IDTerminalRuleCall_10_0 = (RuleCall)cEntity2Assignment_10.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cNameKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cEntity2NameAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cEntity2NameSTRINGTerminalRuleCall_11_1_0 = (RuleCall)cEntity2NameAssignment_11_1.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cDscKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cEntity2DescriptionAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cEntity2DescriptionSTRINGTerminalRuleCall_12_1_0 = (RuleCall)cEntity2DescriptionAssignment_12_1.eContents().get(0);
		private final Keyword cFlowsKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cLeftCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Assignment cFlowFixAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cFlowFixFlowFixParserRuleCall_15_0 = (RuleCall)cFlowFixAssignment_15.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cDocumentationAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_17_0 = (RuleCall)cDocumentationAssignment_17.eContents().get(0);
		
		//SplitExternalAndProcess:
		//    'split' id=ID 'into' 'external' 'entity' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'process' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
		//        (flowFix+=FlowFix)*
		//    '}' documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'split' id=ID 'into' 'external' 'entity' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'process' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
		//    (flowFix+=FlowFix)*
		//'}' documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'split'
		public Keyword getSplitKeyword_0() { return cSplitKeyword_0; }
		
		//id=ID
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }
		
		//'into'
		public Keyword getIntoKeyword_2() { return cIntoKeyword_2; }
		
		//'external'
		public Keyword getExternalKeyword_3() { return cExternalKeyword_3; }
		
		//'entity'
		public Keyword getEntityKeyword_4() { return cEntityKeyword_4; }
		
		//entity1=ID
		public Assignment getEntity1Assignment_5() { return cEntity1Assignment_5; }
		
		//ID
		public RuleCall getEntity1IDTerminalRuleCall_5_0() { return cEntity1IDTerminalRuleCall_5_0; }
		
		//('name' entity1Name=STRING)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'name'
		public Keyword getNameKeyword_6_0() { return cNameKeyword_6_0; }
		
		//entity1Name=STRING
		public Assignment getEntity1NameAssignment_6_1() { return cEntity1NameAssignment_6_1; }
		
		//STRING
		public RuleCall getEntity1NameSTRINGTerminalRuleCall_6_1_0() { return cEntity1NameSTRINGTerminalRuleCall_6_1_0; }
		
		//('dsc' entity1Description=STRING)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'dsc'
		public Keyword getDscKeyword_7_0() { return cDscKeyword_7_0; }
		
		//entity1Description=STRING
		public Assignment getEntity1DescriptionAssignment_7_1() { return cEntity1DescriptionAssignment_7_1; }
		
		//STRING
		public RuleCall getEntity1DescriptionSTRINGTerminalRuleCall_7_1_0() { return cEntity1DescriptionSTRINGTerminalRuleCall_7_1_0; }
		
		//'and'
		public Keyword getAndKeyword_8() { return cAndKeyword_8; }
		
		//'process'
		public Keyword getProcessKeyword_9() { return cProcessKeyword_9; }
		
		//entity2=ID
		public Assignment getEntity2Assignment_10() { return cEntity2Assignment_10; }
		
		//ID
		public RuleCall getEntity2IDTerminalRuleCall_10_0() { return cEntity2IDTerminalRuleCall_10_0; }
		
		//('name' entity2Name=STRING)?
		public Group getGroup_11() { return cGroup_11; }
		
		//'name'
		public Keyword getNameKeyword_11_0() { return cNameKeyword_11_0; }
		
		//entity2Name=STRING
		public Assignment getEntity2NameAssignment_11_1() { return cEntity2NameAssignment_11_1; }
		
		//STRING
		public RuleCall getEntity2NameSTRINGTerminalRuleCall_11_1_0() { return cEntity2NameSTRINGTerminalRuleCall_11_1_0; }
		
		//('dsc' entity2Description=STRING)?
		public Group getGroup_12() { return cGroup_12; }
		
		//'dsc'
		public Keyword getDscKeyword_12_0() { return cDscKeyword_12_0; }
		
		//entity2Description=STRING
		public Assignment getEntity2DescriptionAssignment_12_1() { return cEntity2DescriptionAssignment_12_1; }
		
		//STRING
		public RuleCall getEntity2DescriptionSTRINGTerminalRuleCall_12_1_0() { return cEntity2DescriptionSTRINGTerminalRuleCall_12_1_0; }
		
		//'flows'
		public Keyword getFlowsKeyword_13() { return cFlowsKeyword_13; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_14() { return cLeftCurlyBracketKeyword_14; }
		
		//(flowFix+=FlowFix)*
		public Assignment getFlowFixAssignment_15() { return cFlowFixAssignment_15; }
		
		//FlowFix
		public RuleCall getFlowFixFlowFixParserRuleCall_15_0() { return cFlowFixFlowFixParserRuleCall_15_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_16() { return cRightCurlyBracketKeyword_16; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_17() { return cDocumentationAssignment_17; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_17_0() { return cDocumentationSTRINGTerminalRuleCall_17_0; }
	}
	public class SplitDatastoreAndExternalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.SplitDatastoreAndExternal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSplitKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Keyword cIntoKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cDatastoreKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cEntity1Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cEntity1IDTerminalRuleCall_4_0 = (RuleCall)cEntity1Assignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNameKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cEntity1NameAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cEntity1NameSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cEntity1NameAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDscKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cEntity1DescriptionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cEntity1DescriptionSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cEntity1DescriptionAssignment_6_1.eContents().get(0);
		private final Keyword cAndKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cExternalKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cEntityKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cEntity2Assignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cEntity2IDTerminalRuleCall_10_0 = (RuleCall)cEntity2Assignment_10.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cNameKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cEntity2NameAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cEntity2NameSTRINGTerminalRuleCall_11_1_0 = (RuleCall)cEntity2NameAssignment_11_1.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cDscKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cEntity2DescriptionAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cEntity2DescriptionSTRINGTerminalRuleCall_12_1_0 = (RuleCall)cEntity2DescriptionAssignment_12_1.eContents().get(0);
		private final Keyword cFlowsKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cLeftCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Assignment cFlowFixAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cFlowFixFlowFixParserRuleCall_15_0 = (RuleCall)cFlowFixAssignment_15.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cDocumentationAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_17_0 = (RuleCall)cDocumentationAssignment_17.eContents().get(0);
		
		//SplitDatastoreAndExternal:
		//    'split' id=ID 'into' 'datastore' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'external' 'entity' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
		//        (flowFix+=FlowFix)*
		//    '}' documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'split' id=ID 'into' 'datastore' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'external' 'entity' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
		//    (flowFix+=FlowFix)*
		//'}' documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'split'
		public Keyword getSplitKeyword_0() { return cSplitKeyword_0; }
		
		//id=ID
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }
		
		//'into'
		public Keyword getIntoKeyword_2() { return cIntoKeyword_2; }
		
		//'datastore'
		public Keyword getDatastoreKeyword_3() { return cDatastoreKeyword_3; }
		
		//entity1=ID
		public Assignment getEntity1Assignment_4() { return cEntity1Assignment_4; }
		
		//ID
		public RuleCall getEntity1IDTerminalRuleCall_4_0() { return cEntity1IDTerminalRuleCall_4_0; }
		
		//('name' entity1Name=STRING)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'name'
		public Keyword getNameKeyword_5_0() { return cNameKeyword_5_0; }
		
		//entity1Name=STRING
		public Assignment getEntity1NameAssignment_5_1() { return cEntity1NameAssignment_5_1; }
		
		//STRING
		public RuleCall getEntity1NameSTRINGTerminalRuleCall_5_1_0() { return cEntity1NameSTRINGTerminalRuleCall_5_1_0; }
		
		//('dsc' entity1Description=STRING)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'dsc'
		public Keyword getDscKeyword_6_0() { return cDscKeyword_6_0; }
		
		//entity1Description=STRING
		public Assignment getEntity1DescriptionAssignment_6_1() { return cEntity1DescriptionAssignment_6_1; }
		
		//STRING
		public RuleCall getEntity1DescriptionSTRINGTerminalRuleCall_6_1_0() { return cEntity1DescriptionSTRINGTerminalRuleCall_6_1_0; }
		
		//'and'
		public Keyword getAndKeyword_7() { return cAndKeyword_7; }
		
		//'external'
		public Keyword getExternalKeyword_8() { return cExternalKeyword_8; }
		
		//'entity'
		public Keyword getEntityKeyword_9() { return cEntityKeyword_9; }
		
		//entity2=ID
		public Assignment getEntity2Assignment_10() { return cEntity2Assignment_10; }
		
		//ID
		public RuleCall getEntity2IDTerminalRuleCall_10_0() { return cEntity2IDTerminalRuleCall_10_0; }
		
		//('name' entity2Name=STRING)?
		public Group getGroup_11() { return cGroup_11; }
		
		//'name'
		public Keyword getNameKeyword_11_0() { return cNameKeyword_11_0; }
		
		//entity2Name=STRING
		public Assignment getEntity2NameAssignment_11_1() { return cEntity2NameAssignment_11_1; }
		
		//STRING
		public RuleCall getEntity2NameSTRINGTerminalRuleCall_11_1_0() { return cEntity2NameSTRINGTerminalRuleCall_11_1_0; }
		
		//('dsc' entity2Description=STRING)?
		public Group getGroup_12() { return cGroup_12; }
		
		//'dsc'
		public Keyword getDscKeyword_12_0() { return cDscKeyword_12_0; }
		
		//entity2Description=STRING
		public Assignment getEntity2DescriptionAssignment_12_1() { return cEntity2DescriptionAssignment_12_1; }
		
		//STRING
		public RuleCall getEntity2DescriptionSTRINGTerminalRuleCall_12_1_0() { return cEntity2DescriptionSTRINGTerminalRuleCall_12_1_0; }
		
		//'flows'
		public Keyword getFlowsKeyword_13() { return cFlowsKeyword_13; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_14() { return cLeftCurlyBracketKeyword_14; }
		
		//(flowFix+=FlowFix)*
		public Assignment getFlowFixAssignment_15() { return cFlowFixAssignment_15; }
		
		//FlowFix
		public RuleCall getFlowFixFlowFixParserRuleCall_15_0() { return cFlowFixFlowFixParserRuleCall_15_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_16() { return cRightCurlyBracketKeyword_16; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_17() { return cDocumentationAssignment_17; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_17_0() { return cDocumentationSTRINGTerminalRuleCall_17_0; }
	}
	public class SplitExternalAndDatastoreElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.SplitExternalAndDatastore");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSplitKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Keyword cIntoKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cExternalKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEntityKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cEntity1Assignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEntity1IDTerminalRuleCall_5_0 = (RuleCall)cEntity1Assignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cNameKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cEntity1NameAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cEntity1NameSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cEntity1NameAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cDscKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cEntity1DescriptionAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cEntity1DescriptionSTRINGTerminalRuleCall_7_1_0 = (RuleCall)cEntity1DescriptionAssignment_7_1.eContents().get(0);
		private final Keyword cAndKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cDatastoreKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cEntity2Assignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cEntity2IDTerminalRuleCall_10_0 = (RuleCall)cEntity2Assignment_10.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cNameKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cEntity2NameAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cEntity2NameSTRINGTerminalRuleCall_11_1_0 = (RuleCall)cEntity2NameAssignment_11_1.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cDscKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cEntity2DescriptionAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cEntity2DescriptionSTRINGTerminalRuleCall_12_1_0 = (RuleCall)cEntity2DescriptionAssignment_12_1.eContents().get(0);
		private final Keyword cFlowsKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cLeftCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Assignment cFlowFixAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cFlowFixFlowFixParserRuleCall_15_0 = (RuleCall)cFlowFixAssignment_15.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cDocumentationAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_17_0 = (RuleCall)cDocumentationAssignment_17.eContents().get(0);
		
		//SplitExternalAndDatastore:
		//    'split' id=ID 'into' 'external' 'entity' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'datastore' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
		//        (flowFix+=FlowFix)*
		//    '}' documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'split' id=ID 'into' 'external' 'entity' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'datastore' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
		//    (flowFix+=FlowFix)*
		//'}' documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'split'
		public Keyword getSplitKeyword_0() { return cSplitKeyword_0; }
		
		//id=ID
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }
		
		//'into'
		public Keyword getIntoKeyword_2() { return cIntoKeyword_2; }
		
		//'external'
		public Keyword getExternalKeyword_3() { return cExternalKeyword_3; }
		
		//'entity'
		public Keyword getEntityKeyword_4() { return cEntityKeyword_4; }
		
		//entity1=ID
		public Assignment getEntity1Assignment_5() { return cEntity1Assignment_5; }
		
		//ID
		public RuleCall getEntity1IDTerminalRuleCall_5_0() { return cEntity1IDTerminalRuleCall_5_0; }
		
		//('name' entity1Name=STRING)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'name'
		public Keyword getNameKeyword_6_0() { return cNameKeyword_6_0; }
		
		//entity1Name=STRING
		public Assignment getEntity1NameAssignment_6_1() { return cEntity1NameAssignment_6_1; }
		
		//STRING
		public RuleCall getEntity1NameSTRINGTerminalRuleCall_6_1_0() { return cEntity1NameSTRINGTerminalRuleCall_6_1_0; }
		
		//('dsc' entity1Description=STRING)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'dsc'
		public Keyword getDscKeyword_7_0() { return cDscKeyword_7_0; }
		
		//entity1Description=STRING
		public Assignment getEntity1DescriptionAssignment_7_1() { return cEntity1DescriptionAssignment_7_1; }
		
		//STRING
		public RuleCall getEntity1DescriptionSTRINGTerminalRuleCall_7_1_0() { return cEntity1DescriptionSTRINGTerminalRuleCall_7_1_0; }
		
		//'and'
		public Keyword getAndKeyword_8() { return cAndKeyword_8; }
		
		//'datastore'
		public Keyword getDatastoreKeyword_9() { return cDatastoreKeyword_9; }
		
		//entity2=ID
		public Assignment getEntity2Assignment_10() { return cEntity2Assignment_10; }
		
		//ID
		public RuleCall getEntity2IDTerminalRuleCall_10_0() { return cEntity2IDTerminalRuleCall_10_0; }
		
		//('name' entity2Name=STRING)?
		public Group getGroup_11() { return cGroup_11; }
		
		//'name'
		public Keyword getNameKeyword_11_0() { return cNameKeyword_11_0; }
		
		//entity2Name=STRING
		public Assignment getEntity2NameAssignment_11_1() { return cEntity2NameAssignment_11_1; }
		
		//STRING
		public RuleCall getEntity2NameSTRINGTerminalRuleCall_11_1_0() { return cEntity2NameSTRINGTerminalRuleCall_11_1_0; }
		
		//('dsc' entity2Description=STRING)?
		public Group getGroup_12() { return cGroup_12; }
		
		//'dsc'
		public Keyword getDscKeyword_12_0() { return cDscKeyword_12_0; }
		
		//entity2Description=STRING
		public Assignment getEntity2DescriptionAssignment_12_1() { return cEntity2DescriptionAssignment_12_1; }
		
		//STRING
		public RuleCall getEntity2DescriptionSTRINGTerminalRuleCall_12_1_0() { return cEntity2DescriptionSTRINGTerminalRuleCall_12_1_0; }
		
		//'flows'
		public Keyword getFlowsKeyword_13() { return cFlowsKeyword_13; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_14() { return cLeftCurlyBracketKeyword_14; }
		
		//(flowFix+=FlowFix)*
		public Assignment getFlowFixAssignment_15() { return cFlowFixAssignment_15; }
		
		//FlowFix
		public RuleCall getFlowFixFlowFixParserRuleCall_15_0() { return cFlowFixFlowFixParserRuleCall_15_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_16() { return cRightCurlyBracketKeyword_16; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_17() { return cDocumentationAssignment_17; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_17_0() { return cDocumentationSTRINGTerminalRuleCall_17_0; }
	}
	public class SplitDatastoreAndDatastoreElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.SplitDatastoreAndDatastore");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSplitKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Keyword cIntoKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cDatastoreKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cEntity1Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cEntity1IDTerminalRuleCall_4_0 = (RuleCall)cEntity1Assignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNameKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cEntity1NameAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cEntity1NameSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cEntity1NameAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDscKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cEntity1DescriptionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cEntity1DescriptionSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cEntity1DescriptionAssignment_6_1.eContents().get(0);
		private final Keyword cAndKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cDatastoreKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cEntity2Assignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cEntity2IDTerminalRuleCall_9_0 = (RuleCall)cEntity2Assignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cNameKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cEntity2NameAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cEntity2NameSTRINGTerminalRuleCall_10_1_0 = (RuleCall)cEntity2NameAssignment_10_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cDscKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cEntity2DescriptionAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cEntity2DescriptionSTRINGTerminalRuleCall_11_1_0 = (RuleCall)cEntity2DescriptionAssignment_11_1.eContents().get(0);
		private final Keyword cFlowsKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cLeftCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cFlowFixAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cFlowFixFlowFixParserRuleCall_14_0 = (RuleCall)cFlowFixAssignment_14.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cDocumentationAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_16_0 = (RuleCall)cDocumentationAssignment_16.eContents().get(0);
		
		//SplitDatastoreAndDatastore:
		//    'split' id=ID 'into' 'datastore' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'datastore' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
		//        (flowFix+=FlowFix)*
		//    '}' documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'split' id=ID 'into' 'datastore' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'datastore' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
		//    (flowFix+=FlowFix)*
		//'}' documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'split'
		public Keyword getSplitKeyword_0() { return cSplitKeyword_0; }
		
		//id=ID
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }
		
		//'into'
		public Keyword getIntoKeyword_2() { return cIntoKeyword_2; }
		
		//'datastore'
		public Keyword getDatastoreKeyword_3() { return cDatastoreKeyword_3; }
		
		//entity1=ID
		public Assignment getEntity1Assignment_4() { return cEntity1Assignment_4; }
		
		//ID
		public RuleCall getEntity1IDTerminalRuleCall_4_0() { return cEntity1IDTerminalRuleCall_4_0; }
		
		//('name' entity1Name=STRING)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'name'
		public Keyword getNameKeyword_5_0() { return cNameKeyword_5_0; }
		
		//entity1Name=STRING
		public Assignment getEntity1NameAssignment_5_1() { return cEntity1NameAssignment_5_1; }
		
		//STRING
		public RuleCall getEntity1NameSTRINGTerminalRuleCall_5_1_0() { return cEntity1NameSTRINGTerminalRuleCall_5_1_0; }
		
		//('dsc' entity1Description=STRING)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'dsc'
		public Keyword getDscKeyword_6_0() { return cDscKeyword_6_0; }
		
		//entity1Description=STRING
		public Assignment getEntity1DescriptionAssignment_6_1() { return cEntity1DescriptionAssignment_6_1; }
		
		//STRING
		public RuleCall getEntity1DescriptionSTRINGTerminalRuleCall_6_1_0() { return cEntity1DescriptionSTRINGTerminalRuleCall_6_1_0; }
		
		//'and'
		public Keyword getAndKeyword_7() { return cAndKeyword_7; }
		
		//'datastore'
		public Keyword getDatastoreKeyword_8() { return cDatastoreKeyword_8; }
		
		//entity2=ID
		public Assignment getEntity2Assignment_9() { return cEntity2Assignment_9; }
		
		//ID
		public RuleCall getEntity2IDTerminalRuleCall_9_0() { return cEntity2IDTerminalRuleCall_9_0; }
		
		//('name' entity2Name=STRING)?
		public Group getGroup_10() { return cGroup_10; }
		
		//'name'
		public Keyword getNameKeyword_10_0() { return cNameKeyword_10_0; }
		
		//entity2Name=STRING
		public Assignment getEntity2NameAssignment_10_1() { return cEntity2NameAssignment_10_1; }
		
		//STRING
		public RuleCall getEntity2NameSTRINGTerminalRuleCall_10_1_0() { return cEntity2NameSTRINGTerminalRuleCall_10_1_0; }
		
		//('dsc' entity2Description=STRING)?
		public Group getGroup_11() { return cGroup_11; }
		
		//'dsc'
		public Keyword getDscKeyword_11_0() { return cDscKeyword_11_0; }
		
		//entity2Description=STRING
		public Assignment getEntity2DescriptionAssignment_11_1() { return cEntity2DescriptionAssignment_11_1; }
		
		//STRING
		public RuleCall getEntity2DescriptionSTRINGTerminalRuleCall_11_1_0() { return cEntity2DescriptionSTRINGTerminalRuleCall_11_1_0; }
		
		//'flows'
		public Keyword getFlowsKeyword_12() { return cFlowsKeyword_12; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_13() { return cLeftCurlyBracketKeyword_13; }
		
		//(flowFix+=FlowFix)*
		public Assignment getFlowFixAssignment_14() { return cFlowFixAssignment_14; }
		
		//FlowFix
		public RuleCall getFlowFixFlowFixParserRuleCall_14_0() { return cFlowFixFlowFixParserRuleCall_14_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_15() { return cRightCurlyBracketKeyword_15; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_16() { return cDocumentationAssignment_16; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_16_0() { return cDocumentationSTRINGTerminalRuleCall_16_0; }
	}
	public class SplitExternalAndExternalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.SplitExternalAndExternal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSplitKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Keyword cIntoKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cExternalKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEntityKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cEntity1Assignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEntity1IDTerminalRuleCall_5_0 = (RuleCall)cEntity1Assignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cNameKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cEntity1NameAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cEntity1NameSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cEntity1NameAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cDscKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cEntity1DescriptionAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cEntity1DescriptionSTRINGTerminalRuleCall_7_1_0 = (RuleCall)cEntity1DescriptionAssignment_7_1.eContents().get(0);
		private final Keyword cAndKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cExternalKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cEntityKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cEntity2Assignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cEntity2IDTerminalRuleCall_11_0 = (RuleCall)cEntity2Assignment_11.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cNameKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cEntity2NameAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cEntity2NameSTRINGTerminalRuleCall_12_1_0 = (RuleCall)cEntity2NameAssignment_12_1.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cDscKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cEntity2DescriptionAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cEntity2DescriptionSTRINGTerminalRuleCall_13_1_0 = (RuleCall)cEntity2DescriptionAssignment_13_1.eContents().get(0);
		private final Keyword cFlowsKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cLeftCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cFlowFixAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cFlowFixFlowFixParserRuleCall_16_0 = (RuleCall)cFlowFixAssignment_16.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Assignment cDocumentationAssignment_18 = (Assignment)cGroup.eContents().get(18);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_18_0 = (RuleCall)cDocumentationAssignment_18.eContents().get(0);
		
		//SplitExternalAndExternal:
		//    'split' id=ID 'into' 'external' 'entity' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'external' 'entity' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
		//            (flowFix+=FlowFix)*
		//    '}' documentation=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//'split' id=ID 'into' 'external' 'entity' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'external' 'entity' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
		//        (flowFix+=FlowFix)*
		//'}' documentation=STRING?
		public Group getGroup() { return cGroup; }
		
		//'split'
		public Keyword getSplitKeyword_0() { return cSplitKeyword_0; }
		
		//id=ID
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }
		
		//'into'
		public Keyword getIntoKeyword_2() { return cIntoKeyword_2; }
		
		//'external'
		public Keyword getExternalKeyword_3() { return cExternalKeyword_3; }
		
		//'entity'
		public Keyword getEntityKeyword_4() { return cEntityKeyword_4; }
		
		//entity1=ID
		public Assignment getEntity1Assignment_5() { return cEntity1Assignment_5; }
		
		//ID
		public RuleCall getEntity1IDTerminalRuleCall_5_0() { return cEntity1IDTerminalRuleCall_5_0; }
		
		//('name' entity1Name=STRING)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'name'
		public Keyword getNameKeyword_6_0() { return cNameKeyword_6_0; }
		
		//entity1Name=STRING
		public Assignment getEntity1NameAssignment_6_1() { return cEntity1NameAssignment_6_1; }
		
		//STRING
		public RuleCall getEntity1NameSTRINGTerminalRuleCall_6_1_0() { return cEntity1NameSTRINGTerminalRuleCall_6_1_0; }
		
		//('dsc' entity1Description=STRING)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'dsc'
		public Keyword getDscKeyword_7_0() { return cDscKeyword_7_0; }
		
		//entity1Description=STRING
		public Assignment getEntity1DescriptionAssignment_7_1() { return cEntity1DescriptionAssignment_7_1; }
		
		//STRING
		public RuleCall getEntity1DescriptionSTRINGTerminalRuleCall_7_1_0() { return cEntity1DescriptionSTRINGTerminalRuleCall_7_1_0; }
		
		//'and'
		public Keyword getAndKeyword_8() { return cAndKeyword_8; }
		
		//'external'
		public Keyword getExternalKeyword_9() { return cExternalKeyword_9; }
		
		//'entity'
		public Keyword getEntityKeyword_10() { return cEntityKeyword_10; }
		
		//entity2=ID
		public Assignment getEntity2Assignment_11() { return cEntity2Assignment_11; }
		
		//ID
		public RuleCall getEntity2IDTerminalRuleCall_11_0() { return cEntity2IDTerminalRuleCall_11_0; }
		
		//('name' entity2Name=STRING)?
		public Group getGroup_12() { return cGroup_12; }
		
		//'name'
		public Keyword getNameKeyword_12_0() { return cNameKeyword_12_0; }
		
		//entity2Name=STRING
		public Assignment getEntity2NameAssignment_12_1() { return cEntity2NameAssignment_12_1; }
		
		//STRING
		public RuleCall getEntity2NameSTRINGTerminalRuleCall_12_1_0() { return cEntity2NameSTRINGTerminalRuleCall_12_1_0; }
		
		//('dsc' entity2Description=STRING)?
		public Group getGroup_13() { return cGroup_13; }
		
		//'dsc'
		public Keyword getDscKeyword_13_0() { return cDscKeyword_13_0; }
		
		//entity2Description=STRING
		public Assignment getEntity2DescriptionAssignment_13_1() { return cEntity2DescriptionAssignment_13_1; }
		
		//STRING
		public RuleCall getEntity2DescriptionSTRINGTerminalRuleCall_13_1_0() { return cEntity2DescriptionSTRINGTerminalRuleCall_13_1_0; }
		
		//'flows'
		public Keyword getFlowsKeyword_14() { return cFlowsKeyword_14; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_15() { return cLeftCurlyBracketKeyword_15; }
		
		//(flowFix+=FlowFix)*
		public Assignment getFlowFixAssignment_16() { return cFlowFixAssignment_16; }
		
		//FlowFix
		public RuleCall getFlowFixFlowFixParserRuleCall_16_0() { return cFlowFixFlowFixParserRuleCall_16_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
		
		//documentation=STRING?
		public Assignment getDocumentationAssignment_18() { return cDocumentationAssignment_18; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_18_0() { return cDocumentationSTRINGTerminalRuleCall_18_0; }
	}
	public class GroupingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.Grouping");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCountermeasureParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDesignParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRefactoringParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Grouping:
		//    (Countermeasure|Design|Refactoring);
		@Override public ParserRule getRule() { return rule; }
		
		//(Countermeasure|Design|Refactoring)
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Countermeasure
		public RuleCall getCountermeasureParserRuleCall_0() { return cCountermeasureParserRuleCall_0; }
		
		//Design
		public RuleCall getDesignParserRuleCall_1() { return cDesignParserRuleCall_1; }
		
		//Refactoring
		public RuleCall getRefactoringParserRuleCall_2() { return cRefactoringParserRuleCall_2; }
	}
	public class CountermeasureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.Countermeasure");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCountermeasureKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_2_0 = (RuleCall)cDescriptionAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOperatoinsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOperatoinsOperationsParserRuleCall_4_0 = (RuleCall)cOperatoinsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Countermeasure:
		//    'countermeasure' name=ID description=STRING '{'
		//        (operatoins+=Operations)*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'countermeasure' name=ID description=STRING '{'
		//    (operatoins+=Operations)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'countermeasure'
		public Keyword getCountermeasureKeyword_0() { return cCountermeasureKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_2() { return cDescriptionAssignment_2; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_2_0() { return cDescriptionSTRINGTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//(operatoins+=Operations)*
		public Assignment getOperatoinsAssignment_4() { return cOperatoinsAssignment_4; }
		
		//Operations
		public RuleCall getOperatoinsOperationsParserRuleCall_4_0() { return cOperatoinsOperationsParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class DesignElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.Design");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDesignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_2_0 = (RuleCall)cDescriptionAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOperatoinsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOperatoinsOperationsParserRuleCall_4_0 = (RuleCall)cOperatoinsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Design:
		//    'design' name=ID description=STRING '{'
		//        (operatoins+=Operations)*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'design' name=ID description=STRING '{'
		//    (operatoins+=Operations)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'design'
		public Keyword getDesignKeyword_0() { return cDesignKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_2() { return cDescriptionAssignment_2; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_2_0() { return cDescriptionSTRINGTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//(operatoins+=Operations)*
		public Assignment getOperatoinsAssignment_4() { return cOperatoinsAssignment_4; }
		
		//Operations
		public RuleCall getOperatoinsOperationsParserRuleCall_4_0() { return cOperatoinsOperationsParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class RefactoringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.Refactoring");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefactoringKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_2_0 = (RuleCall)cDescriptionAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOperatoinsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOperatoinsOperationsParserRuleCall_4_0 = (RuleCall)cOperatoinsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Refactoring:
		//    'refactoring' name=ID description=STRING '{'
		//        (operatoins+=Operations)*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'refactoring' name=ID description=STRING '{'
		//    (operatoins+=Operations)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'refactoring'
		public Keyword getRefactoringKeyword_0() { return cRefactoringKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_2() { return cDescriptionAssignment_2; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_2_0() { return cDescriptionSTRINGTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//(operatoins+=Operations)*
		public Assignment getOperatoinsAssignment_4() { return cOperatoinsAssignment_4; }
		
		//Operations
		public RuleCall getOperatoinsOperationsParserRuleCall_4_0() { return cOperatoinsOperationsParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class TestingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.Testing");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTestingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_2_0 = (RuleCall)cDescriptionAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOperatoinsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOperatoinsOperationsParserRuleCall_4_0 = (RuleCall)cOperatoinsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Testing:
		//    'testing' name=ID description=STRING '{'
		//        (operatoins+=Operations)*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'testing' name=ID description=STRING '{'
		//    (operatoins+=Operations)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'testing'
		public Keyword getTestingKeyword_0() { return cTestingKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_2() { return cDescriptionAssignment_2; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_2_0() { return cDescriptionSTRINGTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//(operatoins+=Operations)*
		public Assignment getOperatoinsAssignment_4() { return cOperatoinsAssignment_4; }
		
		//Operations
		public RuleCall getOperatoinsOperationsParserRuleCall_4_0() { return cOperatoinsOperationsParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class SketchingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.ThreatModelLanguage.Sketching");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSketchingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_2_0 = (RuleCall)cDescriptionAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOperatoinsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOperatoinsOperationsParserRuleCall_4_0 = (RuleCall)cOperatoinsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Sketching:
		//    'sketching' name=ID description=STRING '{'
		//        (operatoins+=Operations)*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'sketching' name=ID description=STRING '{'
		//    (operatoins+=Operations)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'sketching'
		public Keyword getSketchingKeyword_0() { return cSketchingKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_2() { return cDescriptionAssignment_2; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_2_0() { return cDescriptionSTRINGTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//(operatoins+=Operations)*
		public Assignment getOperatoinsAssignment_4() { return cOperatoinsAssignment_4; }
		
		//Operations
		public RuleCall getOperatoinsOperationsParserRuleCall_4_0() { return cOperatoinsOperationsParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	
	
	private final ModelElements pModel;
	private final StatementsElements pStatements;
	private final OperationsElements pOperations;
	private final AddElements pAdd;
	private final AddEntityElements pAddEntity;
	private final AddProcessElements pAddProcess;
	private final AddExternalElements pAddExternal;
	private final AddDatastoreElements pAddDatastore;
	private final AddFlowElements pAddFlow;
	private final AddBoundaryElements pAddBoundary;
	private final RemoveElements pRemove;
	private final ModifyElements pModify;
	private final RenameElements pRename;
	private final ReIDElements pReID;
	private final ChangeDescriptionElements pChangeDescription;
	private final FlowSourceElements pFlowSource;
	private final FlowDestinationElements pFlowDestination;
	private final BoundaryAddEntityElements pBoundaryAddEntity;
	private final BoundaryRemoveEntityElements pBoundaryRemoveEntity;
	private final RotateFlowElements pRotateFlow;
	private final MergeEntityElements pMergeEntity;
	private final MergeIntoProcessElements pMergeIntoProcess;
	private final MergeIntoExternalElements pMergeIntoExternal;
	private final MergeIntoDatastoreElements pMergeIntoDatastore;
	private final SplitEntityElements pSplitEntity;
	private final FlowFixElements pFlowFix;
	private final SplitProcessAndProcessElements pSplitProcessAndProcess;
	private final SplitsProcessAndDatastoreElements pSplitsProcessAndDatastore;
	private final SplitsDatastoreAndProcessElements pSplitsDatastoreAndProcess;
	private final SplitProcessAndExternalElements pSplitProcessAndExternal;
	private final SplitExternalAndProcessElements pSplitExternalAndProcess;
	private final SplitDatastoreAndExternalElements pSplitDatastoreAndExternal;
	private final SplitExternalAndDatastoreElements pSplitExternalAndDatastore;
	private final SplitDatastoreAndDatastoreElements pSplitDatastoreAndDatastore;
	private final SplitExternalAndExternalElements pSplitExternalAndExternal;
	private final GroupingElements pGrouping;
	private final CountermeasureElements pCountermeasure;
	private final DesignElements pDesign;
	private final RefactoringElements pRefactoring;
	private final TestingElements pTesting;
	private final SketchingElements pSketching;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public ThreatModelLanguageGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pStatements = new StatementsElements();
		this.pOperations = new OperationsElements();
		this.pAdd = new AddElements();
		this.pAddEntity = new AddEntityElements();
		this.pAddProcess = new AddProcessElements();
		this.pAddExternal = new AddExternalElements();
		this.pAddDatastore = new AddDatastoreElements();
		this.pAddFlow = new AddFlowElements();
		this.pAddBoundary = new AddBoundaryElements();
		this.pRemove = new RemoveElements();
		this.pModify = new ModifyElements();
		this.pRename = new RenameElements();
		this.pReID = new ReIDElements();
		this.pChangeDescription = new ChangeDescriptionElements();
		this.pFlowSource = new FlowSourceElements();
		this.pFlowDestination = new FlowDestinationElements();
		this.pBoundaryAddEntity = new BoundaryAddEntityElements();
		this.pBoundaryRemoveEntity = new BoundaryRemoveEntityElements();
		this.pRotateFlow = new RotateFlowElements();
		this.pMergeEntity = new MergeEntityElements();
		this.pMergeIntoProcess = new MergeIntoProcessElements();
		this.pMergeIntoExternal = new MergeIntoExternalElements();
		this.pMergeIntoDatastore = new MergeIntoDatastoreElements();
		this.pSplitEntity = new SplitEntityElements();
		this.pFlowFix = new FlowFixElements();
		this.pSplitProcessAndProcess = new SplitProcessAndProcessElements();
		this.pSplitsProcessAndDatastore = new SplitsProcessAndDatastoreElements();
		this.pSplitsDatastoreAndProcess = new SplitsDatastoreAndProcessElements();
		this.pSplitProcessAndExternal = new SplitProcessAndExternalElements();
		this.pSplitExternalAndProcess = new SplitExternalAndProcessElements();
		this.pSplitDatastoreAndExternal = new SplitDatastoreAndExternalElements();
		this.pSplitExternalAndDatastore = new SplitExternalAndDatastoreElements();
		this.pSplitDatastoreAndDatastore = new SplitDatastoreAndDatastoreElements();
		this.pSplitExternalAndExternal = new SplitExternalAndExternalElements();
		this.pGrouping = new GroupingElements();
		this.pCountermeasure = new CountermeasureElements();
		this.pDesign = new DesignElements();
		this.pRefactoring = new RefactoringElements();
		this.pTesting = new TestingElements();
		this.pSketching = new SketchingElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("xtext.ThreatModelLanguage".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//    (elements+=Statements)*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Statements:
	//    (Grouping|Operations);
	public StatementsElements getStatementsAccess() {
		return pStatements;
	}
	
	public ParserRule getStatementsRule() {
		return getStatementsAccess().getRule();
	}
	
	//Operations:
	//    (Add | Remove | Modify);
	public OperationsElements getOperationsAccess() {
		return pOperations;
	}
	
	public ParserRule getOperationsRule() {
		return getOperationsAccess().getRule();
	}
	
	////Add
	//Add:
	//    AddEntity  | AddFlow | AddBoundary;
	public AddElements getAddAccess() {
		return pAdd;
	}
	
	public ParserRule getAddRule() {
		return getAddAccess().getRule();
	}
	
	//AddEntity:
	//    (AddProcess|AddExternal|AddDatastore);
	public AddEntityElements getAddEntityAccess() {
		return pAddEntity;
	}
	
	public ParserRule getAddEntityRule() {
		return getAddEntityAccess().getRule();
	}
	
	//AddProcess:
	//    'add' 'process' id=ID ('name' name=STRING)? ('dsc' description=STRING)? documentation=STRING?;
	public AddProcessElements getAddProcessAccess() {
		return pAddProcess;
	}
	
	public ParserRule getAddProcessRule() {
		return getAddProcessAccess().getRule();
	}
	
	//AddExternal:
	//    'add' 'external' 'entity' id=ID ('name' name=STRING)? ('dsc' description=STRING)? documentation=STRING?;
	public AddExternalElements getAddExternalAccess() {
		return pAddExternal;
	}
	
	public ParserRule getAddExternalRule() {
		return getAddExternalAccess().getRule();
	}
	
	//AddDatastore:
	//    'add' 'datastore' id=ID ('name' name=STRING)? ('dsc' description=STRING)? documentation=STRING?;
	public AddDatastoreElements getAddDatastoreAccess() {
		return pAddDatastore;
	}
	
	public ParserRule getAddDatastoreRule() {
		return getAddDatastoreAccess().getRule();
	}
	
	//AddFlow:
	//    'add' 'flow' id=ID ('name' name=STRING)? ('dsc' description=STRING)? sourceId=ID '->' destinationId=ID documentation=STRING?;
	public AddFlowElements getAddFlowAccess() {
		return pAddFlow;
	}
	
	public ParserRule getAddFlowRule() {
		return getAddFlowAccess().getRule();
	}
	
	//AddBoundary:
	//    'add' 'boundary' id=ID ('name' name=STRING)? ('dsc' description=STRING)? ':' (entities+=ID*) documentation=STRING?;
	public AddBoundaryElements getAddBoundaryAccess() {
		return pAddBoundary;
	}
	
	public ParserRule getAddBoundaryRule() {
		return getAddBoundaryAccess().getRule();
	}
	
	//Remove:
	//    'remove' id=ID documentation=STRING?;
	public RemoveElements getRemoveAccess() {
		return pRemove;
	}
	
	public ParserRule getRemoveRule() {
		return getRemoveAccess().getRule();
	}
	
	//Modify:
	//    (Rename | ReID | ChangeDescription | FlowSource| FlowDestination | BoundaryAddEntity| BoundaryRemoveEntity | RotateFlow | MergeEntity | SplitEntity);
	public ModifyElements getModifyAccess() {
		return pModify;
	}
	
	public ParserRule getModifyRule() {
		return getModifyAccess().getRule();
	}
	
	//Rename:
	//    'rename' id=ID 'into' newName=STRING documentation=STRING?;
	public RenameElements getRenameAccess() {
		return pRename;
	}
	
	public ParserRule getRenameRule() {
		return getRenameAccess().getRule();
	}
	
	//ReID:
	//    'change' id=ID 'id' newId=ID documentation=STRING?;
	public ReIDElements getReIDAccess() {
		return pReID;
	}
	
	public ParserRule getReIDRule() {
		return getReIDAccess().getRule();
	}
	
	// //all description
	//ChangeDescription:
	//    'change' id=ID 'description' description=STRING documentation=STRING?;
	public ChangeDescriptionElements getChangeDescriptionAccess() {
		return pChangeDescription;
	}
	
	public ParserRule getChangeDescriptionRule() {
		return getChangeDescriptionAccess().getRule();
	}
	
	//FlowSource:
	//    'change' id=ID 'source' source=ID documentation=STRING?;
	public FlowSourceElements getFlowSourceAccess() {
		return pFlowSource;
	}
	
	public ParserRule getFlowSourceRule() {
		return getFlowSourceAccess().getRule();
	}
	
	//FlowDestination:
	//    'change' id=ID 'destination' destination=ID documentation=STRING?;
	public FlowDestinationElements getFlowDestinationAccess() {
		return pFlowDestination;
	}
	
	public ParserRule getFlowDestinationRule() {
		return getFlowDestinationAccess().getRule();
	}
	
	//BoundaryAddEntity:
	//    'change' id=ID 'add' newEntity=ID documentation=STRING?;
	public BoundaryAddEntityElements getBoundaryAddEntityAccess() {
		return pBoundaryAddEntity;
	}
	
	public ParserRule getBoundaryAddEntityRule() {
		return getBoundaryAddEntityAccess().getRule();
	}
	
	//BoundaryRemoveEntity:
	//    'change' id=ID 'remove' oldEntity=ID documentation=STRING?;
	public BoundaryRemoveEntityElements getBoundaryRemoveEntityAccess() {
		return pBoundaryRemoveEntity;
	}
	
	public ParserRule getBoundaryRemoveEntityRule() {
		return getBoundaryRemoveEntityAccess().getRule();
	}
	
	//RotateFlow:
	//    'change' id=ID 'revert' 'flow' documentation=STRING?;
	public RotateFlowElements getRotateFlowAccess() {
		return pRotateFlow;
	}
	
	public ParserRule getRotateFlowRule() {
		return getRotateFlowAccess().getRule();
	}
	
	//MergeEntity:
	//    (MergeIntoProcess|MergeIntoExternal|MergeIntoDatastore);
	public MergeEntityElements getMergeEntityAccess() {
		return pMergeEntity;
	}
	
	public ParserRule getMergeEntityRule() {
		return getMergeEntityAccess().getRule();
	}
	
	//MergeIntoProcess:
	//    'merge' entity1=ID 'and' entity2=ID 'into' 'process' id=ID ('name' name=STRING)? ('dsc' description=STRING)? documentation=STRING?;
	public MergeIntoProcessElements getMergeIntoProcessAccess() {
		return pMergeIntoProcess;
	}
	
	public ParserRule getMergeIntoProcessRule() {
		return getMergeIntoProcessAccess().getRule();
	}
	
	//MergeIntoExternal:
	//    'merge' entity1=ID 'and' entity2=ID 'into' 'external' 'entity' id=ID ('name' name=STRING)? ('dsc' description=STRING)? documentation=STRING?;
	public MergeIntoExternalElements getMergeIntoExternalAccess() {
		return pMergeIntoExternal;
	}
	
	public ParserRule getMergeIntoExternalRule() {
		return getMergeIntoExternalAccess().getRule();
	}
	
	//MergeIntoDatastore:
	//    'merge' entity1=ID 'and' entity2=ID 'into' 'datastore' id=ID ('name' name=STRING)? ('dsc' description=STRING)? documentation=STRING?;
	public MergeIntoDatastoreElements getMergeIntoDatastoreAccess() {
		return pMergeIntoDatastore;
	}
	
	public ParserRule getMergeIntoDatastoreRule() {
		return getMergeIntoDatastoreAccess().getRule();
	}
	
	//SplitEntity:
	//    (SplitProcessAndProcess|SplitsProcessAndDatastore|SplitsDatastoreAndProcess|SplitProcessAndExternal|SplitExternalAndProcess|SplitDatastoreAndExternal|SplitExternalAndDatastore|SplitDatastoreAndDatastore|SplitExternalAndExternal);
	public SplitEntityElements getSplitEntityAccess() {
		return pSplitEntity;
	}
	
	public ParserRule getSplitEntityRule() {
		return getSplitEntityAccess().getRule();
	}
	
	//FlowFix:
	//    flowId=ID '->' entityId=ID;
	public FlowFixElements getFlowFixAccess() {
		return pFlowFix;
	}
	
	public ParserRule getFlowFixRule() {
		return getFlowFixAccess().getRule();
	}
	
	//SplitProcessAndProcess:
	//    'split' id=ID 'into' 'process' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'process' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
	//        (flowFix+=FlowFix)*
	//    '}' documentation=STRING?;
	public SplitProcessAndProcessElements getSplitProcessAndProcessAccess() {
		return pSplitProcessAndProcess;
	}
	
	public ParserRule getSplitProcessAndProcessRule() {
		return getSplitProcessAndProcessAccess().getRule();
	}
	
	//SplitsProcessAndDatastore:
	//    'split' id=ID 'into' 'process' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'datastore' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
	//        (flowFix+=FlowFix)*
	//    '}' documentation=STRING?;
	public SplitsProcessAndDatastoreElements getSplitsProcessAndDatastoreAccess() {
		return pSplitsProcessAndDatastore;
	}
	
	public ParserRule getSplitsProcessAndDatastoreRule() {
		return getSplitsProcessAndDatastoreAccess().getRule();
	}
	
	//SplitsDatastoreAndProcess:
	//    'split' id=ID 'into' 'datastore' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'process' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
	//        (flowFix+=FlowFix)*
	//    '}' documentation=STRING?;
	public SplitsDatastoreAndProcessElements getSplitsDatastoreAndProcessAccess() {
		return pSplitsDatastoreAndProcess;
	}
	
	public ParserRule getSplitsDatastoreAndProcessRule() {
		return getSplitsDatastoreAndProcessAccess().getRule();
	}
	
	//SplitProcessAndExternal:
	//    'split' id=ID 'into' 'process' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'external' 'entity' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
	//        (flowFix+=FlowFix)*
	//    '}' documentation=STRING?;
	public SplitProcessAndExternalElements getSplitProcessAndExternalAccess() {
		return pSplitProcessAndExternal;
	}
	
	public ParserRule getSplitProcessAndExternalRule() {
		return getSplitProcessAndExternalAccess().getRule();
	}
	
	//SplitExternalAndProcess:
	//    'split' id=ID 'into' 'external' 'entity' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'process' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
	//        (flowFix+=FlowFix)*
	//    '}' documentation=STRING?;
	public SplitExternalAndProcessElements getSplitExternalAndProcessAccess() {
		return pSplitExternalAndProcess;
	}
	
	public ParserRule getSplitExternalAndProcessRule() {
		return getSplitExternalAndProcessAccess().getRule();
	}
	
	//SplitDatastoreAndExternal:
	//    'split' id=ID 'into' 'datastore' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'external' 'entity' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
	//        (flowFix+=FlowFix)*
	//    '}' documentation=STRING?;
	public SplitDatastoreAndExternalElements getSplitDatastoreAndExternalAccess() {
		return pSplitDatastoreAndExternal;
	}
	
	public ParserRule getSplitDatastoreAndExternalRule() {
		return getSplitDatastoreAndExternalAccess().getRule();
	}
	
	//SplitExternalAndDatastore:
	//    'split' id=ID 'into' 'external' 'entity' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'datastore' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
	//        (flowFix+=FlowFix)*
	//    '}' documentation=STRING?;
	public SplitExternalAndDatastoreElements getSplitExternalAndDatastoreAccess() {
		return pSplitExternalAndDatastore;
	}
	
	public ParserRule getSplitExternalAndDatastoreRule() {
		return getSplitExternalAndDatastoreAccess().getRule();
	}
	
	//SplitDatastoreAndDatastore:
	//    'split' id=ID 'into' 'datastore' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'datastore' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
	//        (flowFix+=FlowFix)*
	//    '}' documentation=STRING?;
	public SplitDatastoreAndDatastoreElements getSplitDatastoreAndDatastoreAccess() {
		return pSplitDatastoreAndDatastore;
	}
	
	public ParserRule getSplitDatastoreAndDatastoreRule() {
		return getSplitDatastoreAndDatastoreAccess().getRule();
	}
	
	//SplitExternalAndExternal:
	//    'split' id=ID 'into' 'external' 'entity' entity1=ID ('name' entity1Name=STRING)? ('dsc' entity1Description=STRING)? 'and' 'external' 'entity' entity2=ID ('name' entity2Name=STRING)? ('dsc' entity2Description=STRING)? 'flows' '{'
	//            (flowFix+=FlowFix)*
	//    '}' documentation=STRING?;
	public SplitExternalAndExternalElements getSplitExternalAndExternalAccess() {
		return pSplitExternalAndExternal;
	}
	
	public ParserRule getSplitExternalAndExternalRule() {
		return getSplitExternalAndExternalAccess().getRule();
	}
	
	//Grouping:
	//    (Countermeasure|Design|Refactoring);
	public GroupingElements getGroupingAccess() {
		return pGrouping;
	}
	
	public ParserRule getGroupingRule() {
		return getGroupingAccess().getRule();
	}
	
	//Countermeasure:
	//    'countermeasure' name=ID description=STRING '{'
	//        (operatoins+=Operations)*
	//    '}';
	public CountermeasureElements getCountermeasureAccess() {
		return pCountermeasure;
	}
	
	public ParserRule getCountermeasureRule() {
		return getCountermeasureAccess().getRule();
	}
	
	//Design:
	//    'design' name=ID description=STRING '{'
	//        (operatoins+=Operations)*
	//    '}';
	public DesignElements getDesignAccess() {
		return pDesign;
	}
	
	public ParserRule getDesignRule() {
		return getDesignAccess().getRule();
	}
	
	//Refactoring:
	//    'refactoring' name=ID description=STRING '{'
	//        (operatoins+=Operations)*
	//    '}';
	public RefactoringElements getRefactoringAccess() {
		return pRefactoring;
	}
	
	public ParserRule getRefactoringRule() {
		return getRefactoringAccess().getRule();
	}
	
	//Testing:
	//    'testing' name=ID description=STRING '{'
	//        (operatoins+=Operations)*
	//    '}';
	public TestingElements getTestingAccess() {
		return pTesting;
	}
	
	public ParserRule getTestingRule() {
		return getTestingAccess().getRule();
	}
	
	//Sketching:
	//    'sketching' name=ID description=STRING '{'
	//        (operatoins+=Operations)*
	//    '}';
	public SketchingElements getSketchingAccess() {
		return pSketching;
	}
	
	public ParserRule getSketchingRule() {
		return getSketchingAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
