
design initialDesign "The initial desing of the Secure Drop application"{
	add process firewall name "SecureDrop Dedicated Hardware Firewall" 
	dsc "A pfSense-based which is  is a free and open source firewall and router that also features unified threat management, load balancing, multi WAN, and more."

	add process aptApp name "APT" dsc "Advanced package tool, or APT, is a free-software user interface that works with core libraries to handle the installation and removal of software."
	add process ntpApp name "NPT" dsc "The Network Time Protocol (NTP) is a networking protocol for clock synchronization between computer systems."
	add process dnsApp name "DNS" dsc "The Domain Name System (DNS) is a hierarchical and distributed name service that provides a naming system for computers."
	add process ossecClient name "OSSEC Client" dsc "OSSEC (Open Source HIDS SECurity) is a free, open-source host-based intrusion detection system (HIDS). It performs log analysis, integrity checking, Windows registry monitoring, rootkit detection, time-based alerting, and active response."
	add process secureDropApp name "SecureDrop Application" dsc "The application runs on the Ubuntu OS.
		- The server sees the plaintext communication between journalists and their sources.
		- The server stores and (optional) TLS private key and certificate (if HTTPS is enabled on the source interface)
		- The server stores hashes of codenames, created with scrypt and randomly-generated salts.
		- The server stores journalist password hashes, created with script and randomly-generated salts, as well as TOTP seeds.
		- The server stores only encrypted submissions and communication on disk.
		- The server stores a GPG key for each source, with the source’s codename as the passphrase.
		- The server may store plaintext submissions in memory for at most 24 hours.
		- The server stores sanitized Tor logs, created using the SafeLogging option, for the Source Interface, the Journalist Interface, and SSH.
		- The server stores both access and error logs for the Journalist Interface.
		- The server stores connection history and audit logs for the admin.
		- The server can connect to the Monitor Server using an SSH key and a passphrase.
"
	add datastore DB dsc "A password-protected database"
	add flow f1app secureDropApp -> DB
	add flow f2app DB -> secureDropApp
	add flow f3app firewall -> secureDropApp "The server sees the plaintext codename, used as the login identifier, of every source."
	add flow f4app aptApp -> firewall
	add flow f5app ntpApp -> firewall
	add flow f6app dnsApp -> firewall
	add boundary app name "SecureDrop Application Server":aptApp ntpApp dnsApp ossecClient secureDropApp DB
	add boundary secDrop name "SecureDrop Area": aptApp ntpApp dnsApp ossecClient secureDropApp DB firewall 
}

design monitoring "The monitoring server keeps track of the Application Server and sends out alerts if there’s a problem. It runs the processes on the Ubuntu OS."{
	add process aptMon name "APT" dsc "Advanced package tool, or APT, is a free-software user interface that works with core libraries to handle the installation and removal of software."
	add process ntpMon name "NTP" dsc "The Network Time Protocol (NTP) is a networking protocol for clock synchronization between computer systems."
	add process dnsMon name "DNS" dsc "The Domain Name System (DNS) is a hierarchical and distributed name service that provides a naming system for computers."
	add process ossecServer name "OSSEC Server" dsc "Sends alerts, some via email." "The server stores the OSSEC Alert Public Key the OSSEC alerts are encrypted:
		- The server stores the plaintext alerts on disk, data may also reside in RAM.
		- The server stores the OSSEC Alert Public Key the OSSEC alerts are encrypted to.
		- The server stores plaintext credentials for the SMTP relay used to send OSSEC alerts.
		- The server stores the email address the encrypted OSSEC alerts are sent to.
		- The server stores sanitized Tor logs, created using the SafeLogging option, for SSH.
		- The server stores connection history and audit logs for the admin.
		- The server stores OSSEC and Procmail logs on disk.
		- The server can connect to the Application Server using an SSH key and a passphrase.
"
	add process postfix name "Postfix"
	add flow f1mon ossecClient -> ossecServer
	add flow f2mon ossecServer -> postfix
	add flow f3mon postfix -> firewall
	add flow f4mon aptMon -> firewall
	add flow f5mon ntpMon -> firewall
	add flow f6mon dnsMon -> firewall
	add boundary mon name "SecureDrop Monitoring Server": aptMon ntpMon dnsMon ossecServer postfix
	change secDrop add aptMon 
	change secDrop add ntpMon
	change secDrop add dnsMon 
	change secDrop add ossecServer
	change secDrop add postfix 		
}

design docSource "The document have to be supplied to the application by the source.
		- Use of Tor Browser will leave traces that can be discovered through a forensic analysis of the source’s property following either a compromise or physical seizure. Unless the compromise or seizure happens while the source is submitting documents to SecureDrop, the traces will not include information about sites visited or actions performed in the browser.
		- Use of Tails with a persistent volume will leave traces on the device the operating system was installed on. Unless the compromise or seizure happens while the source is submitting documents to SecureDrop, or using the persistent volume, the traces will not include information about sites visited or actions performed in the browser or on the system.
		- SecureDrop 0.3 encourages sources to protect their codenames by memorizing them. If a source cannot memorize the codename right away, we recommend writing it down and keeping it in a safe place at first, and gradually working to memorize it over time. Once the source has memorized it, they should destroy the written copy. If the source does write down the codename, a compromise or physical seizure of the source’s property may result in the attacker obtaining the source’s codename.
"{
	add process sourceTorBrowser name "Tor Browser" dsc "Runs the Tor browser on the Tails OS and is not infected by Malware."
	add flow sourceappf dsc "Uses the Tor protocol" sourceTorBrowser -> firewall "The server sees the plaintext submissions of every source."
	add boundary sourceArea name "Source Area": sourceTorBrowser	
}

design admin "The admin workstation runs the Tails OS and is not infected by malware. The workstation is used to monitor and work on the SecureDrop Application remotely.
		- To access the Journalist Interface, the Application Server, or the Monitor Server, the attacker needs to obtain the admin’s login credentials and the admin’s two-factor authentication device. Unless the attacker has physical access to the servers, the attacker will also need to obtain the onion service values for the Interface and the servers. This information is stored in a password-protected database in a persistent volume on the admin’s Tails device. The volume is protected by a passphrase. If the admin’s two-factor authentication device is a mobile phone, this will also be protected by a passphrase.
"{
	add process ssh dsc "Secure Shell Protocol (SSH) is a cryptographic network protocol for operating network services securely over an unsecured network. The RSA (4096-bit GPG and SSH keys) are valid"	
	add process tor
	add flow adminf1 dsc "Is clearnet" ssh -> tor
	add flow adminf2 dsc "Uses the Tor protocol" tor -> firewall
	add boundary adminarea name "Admin Workstation": ssh tor
}

design journalist "The journalist uses the SecureDrop system via his/hers workstation.
		- To access the Journalist Interface, the attacker needs to obtain the journalist’s login credentials and the journalist’s two-factor authentication device or seed. Unless the attacker has physical access to the server, the attacker will also need to obtain the onion service value for the Interface. This information is stored in a password-protected database in a persistent volume on the journalist’s Tails device. The volume is protected by a passphrase. If the journalist’s two-factor authentication device is a mobile phone, this will also be protected by a passphrase.
"{
	add process journalistTorBrowser name "Tor Browser" dsc "Runs the Tor browser on the Tails OS and is not infected by malware."
	add flow journalistf dsc "Uses the Tor protocol" journalistTorBrowser -> firewall
	add boundary journalistarea name "Journalist Workstation": journalistTorBrowser
}

design secureView "A physically-secured and air-gapped laptop running the Tails operating system from a USB stick, that journalists use to decrypt and view submitted documents."{
	add process secureViewStation name "Secure Viewing Station"
	add process printer name "Offline Printer" 
	add flow securef dsc "The printer is connected by cabel and must not have not have WiFi or Bluetooth." secureViewStation -> printer 
	add flow transfer dsc "The transfer of the encrypted file happens with a physical USB" journalistTorBrowser -> secureViewStation
	
	add boundary securearea name "Secure Viewing Area": secureViewStation printer
	
	add external entity publish name "Publishing Station" dsc "The PC used to use the decrypted documents and publish articles using the documents"
	add flow export dsc "The export of the decrypted file happens with a physical USB" secureViewStation -> publish	
}

design externals "The external package uses to operate the SecureDrop application." {
	add external entity torApt name "Tor apt repository" dsc "Collection of software packages to easily install and update Tor through the Advanced Package Tool (APT) system."
	add external entity ubuntuApt name "Ubuntu apt repository" dsc "Collection of software packages to easily install and update Ubuntu through the Advanced Package Tool (APT) system."
	add external entity ntpServer name "NTP Server" dsc "A network device that uses the Network Time Protocol (NTP) to synchronize the clocks of computers over a network."
	add external entity fpfApt name "FPF apt repository" dsc "Collection of software packages  provided by the Freedom of the Press Foundation (FPF) to easily install and update tools related to privacy through the Advanced Package Tool (APT) system."
	add external entity smtprelay name "SMTP relay" dsc "A server that transfers email messages from one mail server to another."
	add flow externalf1 firewall -> torApt
	add flow externalf2 firewall -> ubuntuApt
	add flow externalf3 firewall -> ntpServer
	add flow externalf4 firewall -> fpfApt
	add flow externalf5 firewall -> smtprelay
	add boundary externalServ name "External Services": torApt ubuntuApt ntpServer fpfApt smtprelay	
}
